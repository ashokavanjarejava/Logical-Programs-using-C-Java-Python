Logic Based Programs
--------------------


LBP001: Even or Odd Number
LBP002: Weird or Not Weird	
LBP003: Leap Year or Not
LBP004: E-commerce company Bookshelf
LBP005: Next Number from Integer
LBP006: Free Coffee Cups
LBP007: Extract Digits from the number
LBP008: Sum of Digits
LBP009: Sum of even digits
LBP010: Sum of odd digits
LBP011: Sum of prime Digits
LBP012: Sum of Digits  divisible by 3
LBP013: Number of digits
LBP014: Reverse Integer
LBP015: Duck Number
LBP016: Number of Occurrences
LBP017: Paliandrome Number
LBP018: Check Birth Day
LBP019: Decimal to Binary
LBP020: Lucky Customer
LBP021: Christmas offer
LBP022: Niven Number 
LBP023: A Special two digit number
LBP024: Sum of even numbers 
LBP025: Celsius to Fahrenheit
LBP026: Fahrenheit to Celsius	
LBP027: Find The Sequence Sum
LBP028: Climbing a stair case
LBP029: Prime Number or Not
LBP030: Valid Palindrome
LBP031: Create PIN using Three given numbers
LBP032: Count special characters
LBP033: Discount for the newyears holiday
LBP034: Email validation
LBP035: Data Encryption Key
LBP036: First Capital Letter
LBP037: Toggle Case of String
LBP038: Find Number of Misses
LBP039: Black Jack Function
LBP040: Secure Data Transmission
LBP041: One Time Password
LBP042: Prime Number Application
LBP043: Newyear Holiday Discount
LBP044: Sum Double
LBP045: Perfect Number
LBP046: Magic Date
LBP047: Oddish or Evenish
LBP048: Video Length
LBP049: Next Prime
LBP050: Sum of digits between two numbers
LBP051: Defanging an IP address
LBP052: Make "abba"
LBP053: Extra End
LBP054: Get word count
LBP055: String ending matches second String	
LBP056: Shuffle the Name
LBP057: Reverse the order of a String
LBP058: Re-form the word
LBP059: Anagrams
LBP060: Max Occurring Character
LBP061: Color of a chess board square
LBP062: Find the Bomb
LBP063: How many vowels
LBP064: X's and O's, Nobody knows
LBP065: Stuttering Function
LBP066: Repeating Letters
LBP067: Double Letters
LBP068: Board Game
LBP069: Remove Every vowel from a String
LBP070: Space between each character
LBP071: VOWEL REPLACER
LBP072: Say "Hello" Say "Bye"
LBP073: VALID ZIP CODE
LBP074: Returns the middle character of a string
LBP075: Index of first vowel
LBP076: Longest Word
LBP077: How Many Decimal Places?
LBP078: Removing Duplicate Characters from a string
LBP079: Swap corner words and reverse middle characters
LBP080: Valid Hex Code
LBP081: Even Length Words
LBP082: Change Every Letter to the Next Letter
LBP083: First N Vowels
LBP084: Is the String is in Order?
LBP085: Fanny's Occurrences
LBP086: C*ns*r*d Str*ngs
LBP087: Parentheses balance
LBP088: American keyboard
LBP089: Rotate Strings
LBP090: Missing Letters
LBP091: Replace Letters With Position In Alphabet
LBP092: Replace character with it's occurrence
LBP093: First non-repeated character
LBP094: Pangrams
LBP095: Print First Letter of each Word
LBP096: Number of vowels
LBP097: Number of consonants
LBP098: Check only digits
LBP099: Capitalize Every word first character
LBP100: Student Rewarded
LBP101: Reading and writing an array
LBP102: Sum of all elements in array
LBP103: Sum of even numbers in an array
LBP104: Sum of odd numbers in an array
LBP105: Sum of prime numbers in an array
LBP106: Sum of palindrome numbers in an array
LBP107: Sum of strong numbers in an array
LBP108: Sum of elements in an array ending with 3
LBP109: Search for an element in an array
LBP110: Sort the elements in an array ASC
LBP111: Sort the elements in an array DESC
LBP112: Binary search
LBP113: Max element in an array
LBP114: Min element in an array
LBP115: Diff between largest and smallest element in array
LBP116: Second largest element in an array
LBP117: Second smallest element in an array
LBP118: Number of occurrences of an element
LBP119: Inserting element at first position in an array
LBP120: Inserting element at last position in an array
LBP121: Delete an element from first location in an array
LBP122: Delete an element from last location in an array
LBP123: Delete an element from an array at the given location
LBP124: Delete an element from an array 
LBP125: Update an element in an array
LBP126: Update an element in an array
LBP127: Array reverse
LBP128: Increment every element in an array by one unit
LBP129: Number of duplicate elements in array
LBP130: Print unique elements in array
LBP131: Sort an array of 0s, 1s and 2s
LBP132: Replace every element with the greatest element on its right side
LBP133: Sum of two arrays
LBP134: Sum of elements available at even index
LBP135: Sum of elements available at odd index
LBP136: Sum of first and last, second and second last and so on
LBP137: Print reverse of each number in an array
LBP138: Number of even and odd elements
LBP139: Reverse only First half of the elements
LBP140: Difference between two arrays
LBP141: Rearrange an array
LBP142: Array of multiples
LBP143: Inclusive Array Ranges
LBP144: Find the Average of the Letters
LBP145: Eliminate Odd Numbers within an Array
LBP146: Positive Count / Negative Sum
LBP147: Return the Sum of the Two Smallest Numbers
LBP148: Retrieve the Last N Elements
LBP149: Mini Peaks
LBP150: All Numbers In Array Are Prime
LBP151: Sum of Adjacent Distances
LBP152: Odd Even Online Game
LBP153: Garments Company Apparel
LBP154: POOLED CAB SERVICE
LBP155: Kth SHORTEST PROCESSING QUEUE
LBP156: INDEX FILTERNING
LBP157: SEVEN BOOM!
LBP158: Positives and Negatives
LBP159: Check if All Values Are True
LBP160: Shared Digits
LBP161: Combined Consecutive Sequence
LBP162: Count 5s And Win
LBP163: Find the Single Number 
LBP164: Update Every Element
LBP165: Third Largest and Second smallest 
LBP166: Sales Report
LBP167: Online Game
LBP168: Array pliandrome
LBP169: Array to Matrix
LBP170: Matrix to Array
LBP171: Word Key
LBP172: Oddly Even
LBP173: Sweet Seventeen
LBP174: BeautifyMe
LBP175: Print Prime Numbers
LBP176: GCD of two numbers
LBP177: Secret information
LBP178: Flight
LBP179: Arrangement
LBP180: Parity bits
LBP181: Second non-repeating character
LBP182: Absolute difference between prime numbers
LBP183: Product with successor
LBP184: Pre-sorted integers in array
LBP185: Savings
LBP186: Half ascending and half descending
LBP187: Last and second-last
LBP188: Digital root
LBP189: Absolute difference
LBP190: Lucky draw
LBP191: Test paper set
LBP192: Digits raised to the third power
LBP193: Grocery Shop
LBP194: Password change
LBP195: Video share
LBP196: Modular exponentiation
LBP197: Backspace String Compare
LBP198: Token number
LBP199: Score of the player
LBP200: Perfect Math
LBP201: Reading and Writing Matrix Elements
LBP202: Sum of all matrix elements
LBP203: Sum of all even elements
LBP204: Sum of all odd elements
LBP205: Sum of all prime elements
LBP206: Row wise sum in matrix
LBP207: Column wise sum in matrix
LBP208: Sum of diagonal elements in matrix 
LBP209: Sum of opposite diagonal elements in matrix
LBP210: Sum of first and last element in the matrix
LBP211: Find the product of diagonal matrix
LBP212: Find the product of opposite diagonal matrix
LBP213: Max element in matrix
LBP214: Min element in matrix
LBP215: Max element in each row of a matrix
LBP216: Min element in each row of a matrix
LBP217: Transpose of the given matrix
LBP218: Trace of the given matrix
LBP219: Find the frequency of odd and even 
LBP220: Identity matrix
LBP221: Two matrices are equal or not
LBP222: Addition of two matrices
LBP223: Subtraction of two matrices
LBP224: Multiplication of two matrices
LBP225: Sort all the elements in a matrix in asc order
LBP226: Sort all the elements in a matrix in desc order
LBP227: Sort all the elements in a row in asc order
LBP228: Sort all the elements in a row in desc order
LBP229:	Sort all the elements in a column in asc order
LBP230: Sort all the elements in a column in desc order
LBP231: Sparse matrix
LBP232: Swaping of two rows
LBP233: Swaping of two columns
LBP234: Interchange the diagonals
LBP235: Upper triangular matrix
LBP236: Lower triangular matrix
LBP237: Scalar matrix multiplication
LBP238: Symmetric matrix
LBP239: Print diagonal elements
LBP240: Square of Each Element of Matrix
LBP241: Sum of even indexed rows in matrix
LBP242: Sum of odd indexed rows in matrix
LBP243: Sum of even indexed cols in matrix
LBP244: Sum of odd indexed cols in matrix
LBP245: Sum of elements whose sum of row index and col index is even
LBP246: Sum of elements whose sum of row index and col index is odd
LBP247: Sum of prime elements 
LBP248: Count of prime digits in the given matrix
LBP249: Reverse of each element in matrix
LBP250: Keep paliandrome number and replace remaining with 0's
LBP251: Multiples of 10
LBP252: Employee's Rating Point
LBP253: Encrypted digits
LBP254: Easy Shopping
LBP255: Player's score
LBP256: GlobalAdd
LBP257: FunGames
LBP258: The Past Book
LBP259: Morning Prayer
LBP260: Factorial game
LBP261: Speed Maths
LBP262: Puzzle
LBP263: Mathematics class
LBP264: Power function
LBP265: Mathematical tricks
LBP266: Coding standards
LBP267: Party quiz
LBP268: Be Positive
LBP269: Prime Number Busses
LBP270:	Sentence making
LBP271: Single Binary Value
LBP272: Item id
LBP273: Next Letter
LBP274: Sum of All Integers
LBP275: Country Visa Center
LBP276: Neon Number
LBP277: Super market pricing
LBP278: Number Container
LBP279: Pronic number
LBP280: Validate ATM PIN
LBP281: The Actual Memory Size of Your USB Flash Drive
LBP282: Happy Number
LBP283: Calculate the Mean
LBP284: Factorize a Number
LBP285: Next 5 characters
LBP286: Composite Number
LBP287: Hot and Cold Numbers
LBP288: Not Having Alphabet 'a'
LBP289: MathAtTip
LBP290: TodaysApparel
LBP291: BucketId
LBP292: Decimal to Octal
LBP293: Sum of adjacent elements
LBP294: Vaccination Drive List Preparator
LBP295: Area of the circle
LBP296: Divisible by 5 or 7
LBP297: Ending 3
LBP298: Min and Max
LBP299: Lucky String
LBP300: Last three digits
LBP301: Reverse and Replace
LBP302: Party on cruise
LBP303: Airport Security
LBP304: Chocolate factory
LBP305: Digital Logic
LBP306: Security Key
LBP307: Data Encode
LBP308: One Time Password
LBP309: Nearest paliandrome
LBP310: FizzBuzz
LBP311: Primo Number
LBP312: Convert Age to Days
LBP313: Compare Strings by Count of Characters
LBP314: Is the Word Singular or Plural?
LBP315: Invert Color



data types in different programming languages [C, Java and Python]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
data type represents the type of the data that we are using in our program.

Integers, Real values, Characters, Boolean values etc...

C Language:
-----------

Integers ------> short int[2 bytes], int[4 bytes], long int[8 bytes]
Real values ---> float[4 bytes], double[8 bytes]
Characters ----> char [1 byte]
Boolean -------> we dn't have any support for boolean type data in c-lang

Note1:
	Here, we can take integer to represent boolean values
	1-true
	0-false

	int flag = ----;

Note2:
	C language follows ASCII based character set
	American Standard Code for Information Interchange

	a=>97,b=>98,c=>99,.........
	A=>65,B=>66,C=>67,.........
	0=>48,1=>49,2=>50,.........


Java Programming:
-----------------

Integers ----> byte[1 byte], short[2 bytes], int[4 bytes], long[8 bytes]
Real values -> float[4 bytes], double[8 bytes]
Characters --> char [2 bytes]
Boolean -----> boolean [Not Applicable]

Note1:
	Character format supported by java is UNICODE
	Universal Coding Standard

	ASCII + new characters

Python Programming:
-------------------

Python is dynamically typed programming languages, based on provided value, the type will be decided.

int, float, str, list, tuple, dict etc

Ex:
	int x = 111;	C lang
	int y = 222;	Java
	z=333		Python



LBP300:
-------
Implement a program to find sum of last three digits in the given number.

Ex:
	2345

	output: -----> 5+4+3=12

Logic:
	Read a number from user and name it as 'N'

	n1 = N%10
	n2 = (N/10)%10
	n3 = ((N/10)/10)%10
	
	print n1+n2+n3



LBP005:
-------
Implement a program that takes a number as an argument, increments the number by +1 and returns the result.

Ex:
	5 ----> 6
	10 ---> 11
	-4 ---> -3
	-1 ---> 0
	3 ----> 4

Logic:
	read n value from the user

	increment n value by one unit

	c lang ---> n++
	java -----> n++
	Py -------> n=n+1


input and output statements in different programming language:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
c langauges:
------------

input statement: it is used to read input from the user

scanf("format",&v1,&v2,&v3,....);

output statement: it is used to print output to the console/screen

printf("message");
printf("message+format",list_of_values);

formats:
	int		%d
	float	%f
	double	%f
	float	%.xf , where x denotes number of digits after decimal point

	1.23456 ---> 1.23

	char	%c
	string	%s

application: read three numbers and calc and print addition of these three

scanf("%d %d %d",&a,&b,&c);
res = a+b+c;
printf("%d",res);




LBP281:
-------
Implement a program that takes the memory size as an argument and returns the actual memory size.
Note: The actual storage loss on a USB device is 7% of the overall memory size!

actual memory size, round your result to two decimal places

0.93 ---> %.2f

Ex:
	1GB -----> ?
	1GB-0.07---> 0.93GB

Logic:
		read size of usb drive
		let it be n

		print n-n*0.07

C 	----> printf("%.2f",n-n*0.07);
Java ---> System.out.printf("%.2f",n-n*0.07);
Py -----> print("%.2f"%(n-n*0.07));

java io statements:
~~~~~~~~~~~~~~~~~~~
output:
		
		System.out.print(); ------> it prints the content, and control will be on same line
		System.out.println(); ----> it prints the content, and control will be moved to next line
		System.out.printf(); -----> it prints the content on the screen based on c-style


input:
		1) BufferedReader -------> java.io ------> read only char and string
		2) Console --------------> java.io ------> read only username and password
		3) Scanner --------------> java.util ----> read all types of data

		Scanner obj = new Scanner(System.in);

		int ---------------> obj.nextInt()
		double ------------> obj.nextDouble()
		char --------------> obj.next().charAt(0)
		String ------------> obj.next(), obj.nextLine()
		boolean -----------> obj.nextBoolean()




LBP288:
-------
Write a program to check whether a string having alphabet 'a'?

Ex:
	apple -----> true
	kumar -----> true
	love ------> false
	true ------> false
	false -----> true

Logic:
		flag = 0
		for(i=0;s[i];i++)
		{
			if(s[i]=='a')
			{
				flag=1;
				break;
			}
		}
		if flag==1 then print 'true' else 'false'

		Java -----> System.out.println(s.contains("a")); ---> true or false
		Py -------> "a" in s ---> True or False

python:
-------
output:	
			print()
			10 forms of print statements

			Ex:
				print("format"%(list_of_var))

input:
			input() ---> it accepts input from the user, str form
			int(input()) --> it is used to read an integer value from user
			.
			.

Ex:
	read two int values and perform addition operation

	a = int(input())
	b = int(input())
	print(a+b)




P001: WELCOME MESSAGE
~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read user name and display welcome message.

input ------> user name
output -----> welcome <user_name>

Ex:
	prakash -----> welcome prakash
	mahesh babu -> welcome mahesh babu

Logic:
		read a string as name from the user

		C ----> scanf("%s",name);------> stop reading data once if space is encountered -----> not
		        scanf("%[^\n]s",name);--> stop reading data once if a new line is encountered-> Yes

		Java -> obj.next() ------> stop reading data once if space is encountered -----> not
		        obj.nextLine() --> stop reading data once if a new line is encountered-> Yes
		
		Py ---> input()


		C ----> printf("welcome %s",name);
		Java -> System.out.println("welcome "+name);
		Py ---> print("welcome",name);

C Implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char name[100];
    scanf("%[^\n]s",name);//we should not write & symbol for reading string
    printf("welcome %s",name);
    return 0;
}

Java Implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String name = obj.nextLine();
        System.out.println("welcome "+name);
    }
}

Python Implementation:
----------------------
name = input()
print("welcome",name)





P002: ADDITION
~~~~~~~~~~~~~~
Implement a program to read two integer values from the user and perform addition operation

input ------> two integer values
output -----> addition of those two numbers

Ex:
	1
	2

	output: 3

	-1
	3

	output: 2

Logic:
		Read two integer values as a and b
		Print the integer as (a+b)

		C ---> 
				scanf("%d %d",&a,&b);
				printf("%d",a+b);
		Java -->
				int a = obj.nextInt();
				int b = obj.nextInt();
				System.out.println(a+b);
		Py --->
				a = int(input())
				b = int(input())
				print(a+b)

C Implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",a+b);
    return 0;
}

Java Implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int b = obj.nextInt();
        System.out.println(a+b);
    }
}

Python Implementation:
----------------------
a=int(input())
b=int(input())
print(a+b)




P003: NEXT INTEGER
~~~~~~~~~~~~~~~~~~~
Implement a program that takes a number as a input, increment the number by +1 and print the result

input ----> an integer value
output ---> incremented value

Ex:
	2 ----> 3
	4 ----> 5
	-9 ---> -8

Logic:
		read n value from the user

		C ----> n++
		Java -> n++
		Py ---> n+=1

		print n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    n++;
    printf("%d",n);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        n++;
        System.out.println(n);
    }
}

python implementation:
----------------------
n=int(input())
n+=1
print(n)



P004: DIVISIBLE BY 3
~~~~~~~~~~~~~~~~~~~~~
Implement a program to read a number and check whether it is divisible by 3 or not.

input ----> an integer value
output ---> Yes or No

Ex:
		3 -----> Yes
		4 -----> No
		5 -----> No
		6 -----> Yes

Logic:
		read n value from the user

conditional operator -----> if true what we have to execute else what we have to execute -- single

C --------> (condition)?TB:FB
Java -----> (condition)?TB:FB
Py -------> TB if condition else FB

		print (n%3==0)?"Yes":"No"
		print (n%3==0)?"Yes":"No"
		print "Yes" if n%3==0 else "No"

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf((n%3==0)?"Yes":"No");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        System.out.println((n%3==0)?"Yes":"No");
    }
}

python implementation:
----------------------
n=int(input())
print("Yes" if n%3==0 else "No")

P005: NUMBER OF HOURS
~~~~~~~~~~~~~~~~~~~~~
Implement a program to read seconds values in timer and convert it into hours.

input ----> seconds value
output ---> hours value

Ex:
	3600 ----> 1
	4500 ----> 1
	7200 ----> 2

Logic:
		read seconds values as 'sec' 
		print sec/3600

Note:
		C -----> int/int ---> int
		Java --> int/int ---> int
		Py ----> int/int ---> float
		Py ----> int//int --> int

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int sec;
    scanf("%d",&sec);
    printf("%d",sec/3600);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int sec = obj.nextInt();
        System.out.println(sec/3600);
    }
}

python implementation:
----------------------
sec=int(input())
print(sec//3600)

P006: NUMBER OF MONTHS
~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read number of days and convert it into number of months.
Note: consider 30 days per month

input -----> number of days
output ----> months

Ex:
	30 -----> 1 
	60 -----> 2
	100 ----> 3

Logic:
		read days value
		print days/30

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int days;
    scanf("%d",&days);
    printf("%d",days/30);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int days = obj.nextInt();
        System.out.println(days/30);
    }
}

python implementation:
----------------------
days = int(input())
print(days//30)


P007: THREE NUMBERS ADDITION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to accept three space seperated integers and print addition of those three numbers.

input -----> Three space seperated values
output ----> addition of those three integers


Ex:
	1 2 3 ----> 6
	1 1 1 ----> 3

Logic:
		read three numbers as a,b and c
		print a+b+c

	C ------> scanf("%d %d %d",&a,&b,&c);
	Java ---> a=obj.nextInt(); b=obj.nextInt(); c=obj.nextInt();
	Py -----> a,b,c = (int(i) for i in input().split())

https://www.hackerrank.com/lbptest

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    printf("%d",a+b+c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        System.out.println(a+b+c);
    }
}

python implementation:
----------------------
a,b,c=(int(i) for i in input().split())
print(a+b+c)

P008: COFFEE CUPS
~~~~~~~~~~~~~~~~~
Implement a program to clcualte the free number of cups the user gets for a specified number of cups bought by the user. The user get 1 cup free for every 6 cups bought.

input -----> number of cups
output ----> total number of coffee cups


Ex:
	5 --------> 5
	6 --------> 6+1 = 7
	8 --------> 8+1 = 9
	9 --------> 9+1 = 10
	10 -------> 10+1=11
	11 -------> 11+1=12
	12 -------> 12+2=14
	.
	.
	.
	n --------> n+n/6

logic:
		read n value 
		c ----> n+n/6
		java -> n+n/6
		py ---> n+n//6

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf("%d",n+n/6);
    return 0;
}

java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        System.out.println(n+n/6);
    }
}


python implementation:
----------------------
n=int(input())
print(n+n//6)




P009: SUM OF LAST THREE DIGIT NUMBERS IN FOUR DIGIT NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to extract last three digits numbers from the given four digit number and calcualte sum of those three digits numbers.

input -----> a four digit integer number as input
output ----> sum of last three digit numbers


Ex:
	1234
	2+3+4=9

	1023
	0+2+3=5

Logic:
		read n value from the user and calc

		d1 = n%10
		d2 = (n/10)%10
		d3 = (n/100)%10

		print d1+d2+d3

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d1,d2,d3;
    scanf("%d",&n);
    d1 = n%10;
    d2 = (n/10)%10;
    d3 = (n/100)%10;
    printf("%d",d1+d2+d3);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        System.out.println(n%10+(n/10)%10+(n/100)%10);
    }
}

python implementation:
----------------------
n = input()
print(int(n[-1])+int(n[-2])+int(n[-3]))


P010: MULTIPLICATION OF CURRENT AND NEXT NUMBER FROM THE GIVEN INTEGER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to perform multiplication operation on given and next to given number.

input -------> an integer value
output ------> multiplication of current and next number

Ex:
	2 ----> 2*3 = 6
	10 ---> 10*11 = 110
	5 ----> 5*6 = 30

Logic:
		read n value from the user
		print n*(n+1)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf("%d",n*(n+1));
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(n*(n+1));
    }
}

python implementation:
----------------------
n=int(input())
print(n*(n+1))



P011: DIVISION AND MODULO DIVISION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find division and modulo division of given two integer values.

input -------> two integer values (seperated by new line char)
output ------> division and modulo division

Ex:
	5
	2

	2
	1

Ex2:
	4
	2

	2
	0

Logic:
	print a/b and a%b if c and java
	print a//b and a%b if py

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d %d",a/b,a%b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt();
        System.out.println((a/b)+" "+(a%b));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print(a//b,a%b)

P012: MULTIPLICATION
~~~~~~~~~~~~~~~~~~~~
Implement a program to calcualte multiplication on given two integer values.

input -------> two integer values (seperated by new line char)
output ------> multiplication 

Ex1:
	5
	2

	10

Ex2:
	7
	3

	21

Logic:
	read a and b values
	print a*b

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",a*b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt();
        System.out.println(a*b);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print(a*b)



P013: ARE THE NUMBERS ARE EQUAL?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to check whether the given two numbers are equal or not?

input -------> two integer values
output ------> true or false

Ex1:
	10
	20
	false

Ex2:
	23
	23
	true

Logic:
	read a and b values
	
	C  ----> (a==b)?"true":"false"
	Java --> (a==b)
	Py ----> "true" if a==b else "false"

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf((a==b)?"true":"false");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt();
        System.out.println(a==b);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print("true" if a==b else "false")



P014: POWER CALCULATOR
~~~~~~~~~~~~~~~~~~~~~~
Implement a program to take voltage and current and print the calculated power.

input -------> voltage and current
output ------> power

formula: power = voltage * current

Ex:
	30
	10
	300
Logic:
	read voltage and current as input
	print voltage*current

	or

	multiplication of two numbers
	
c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",a*b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt();
        System.out.println(a*b);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print(a*b)

P015: CONVERT AGE TO DAYS
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to convert given age into days, by considering 365 days as the length of the year and ignore leap years.

input -------> age as input
output ------> number of days

Ex:	
	30
	10950

Logic:
	read age as input
	print age*365

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int age;
    scanf("%d",&age);
    printf("%d",age*365);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int age = obj.nextInt();
        System.out.println(age*365);
    }
}

python implementation:
----------------------
age=int(input())
print(age*365)

P016: FOOTBALL POINTS
~~~~~~~~~~~~~~~~~~~~~
Create a program that takes the number of wins, draws and losses and calculates the number of points a football team has obtained so far.

1. wins get 3 points
2. draws get 1 points
3. losses get 0 points

input ------> number of wins, draws and losses
output -----> number of points


Ex:
	4 2 1 ===> 4x3 + 2x1 + 1x0 ===> 12 + 2 + 0 ===> 14
	3 4 2 ===> 3x3 + 4x1 + 2x0 ===> 9 + 4 + 0 ====> 13

Logic:
	read a,b and c values
	points = a*3 + b*1 + c*0
	print points

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    printf("%d",a*3+b*1+c*0);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        System.out.println(a*3+b*1+c*0);
    }
}

python implementation:
----------------------
a,b,c = (int(i) for i in input().split())
print(a*3+b*1+c*0)

P017: TWO MAKES TEN
~~~~~~~~~~~~~~~~~~~~
Implement a program that takes two inputs from the user a and b, print 'true' if one of them is 10 or if their sum is 10.

input -----> a and b value
output ----> true or false

Ex:
	10 23 ===> true
	1 4 =====> false
	9 1 =====> true

Logic:
	read a and b values
	if a==10 or b==10 or a+b==10 then print 'true' else 'false'
	
Q) what is the diff between = and ==?
-------------------------------------
= is an assignment operator
== is a comparison operator

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf((a==10 || b==10 || a+b==10)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt();
        System.out.println(a==10 || b==10 || a+b==10);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print('true' if a==10 or b==10 or a+b==10 else 'false')

pranab implementation:
----------------------
n1 =  int(input())
n2 =  int(input())

if n1==10 or n2==10 or n1+n2==10:
    print("true")
else:
    print("false")




P018: CHARACTER TO ASCII
~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to convert given character into ascii value

input -----> character
output ----> an integer value

Ex:
	American Code for Information Interchange. --> 0 to 255
	Unicode ----> 0 to 65535

	a-z, A-Z, 0-9

	a=>97, b=>98, c=>99 and so on
	A=>65, B=>66, C=>67 and so on
	0=>48, 1=>49, 2=>50 and so on
	+32
	
	char ---> int

	'a' ----> 97
	'd' ----> 100
	'3' ----> 51

Logic:
	read char value from the user

	scanf("%c",&ch);
	ch = obj.nextLine().charAt(0);
	ch = input()

	printf("%d",ch);
	System.out.println((int)ch);
	print(ord(ch))

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char ch;
    scanf("%c",&ch);
    printf("%d",ch);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        char ch = obj.nextLine().charAt(0);
        System.out.println((int)ch);
    }
}

python implementation:
----------------------
ch = input()
print(ord(ch))

import math
math.factorial(---)




P019: ASCII TO CHARACTER
~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to convert given ascii value into character

input ----> an integer value
output ---> character

Ex:
	97 ----> 'a'
	48 ----> '0'

Logic:
	read 'n' value from user as int
	
	printf("%c",n);
	System.out.println((char)n);
	print(chr(n))

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf("%c",n);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        System.out.println((char)n);
    }
}

python implementation:
----------------------
n=int(input())
print(chr(n))

P020: AREA OF CIRCLE
~~~~~~~~~~~~~~~~~~~~
Implement a program to find the area of the circle

input ----> radius value
output ---> area of the circle (round to two decimals)

Ex:
	2 ----> 3.147*2*2 ----> 12.xxxxx ---> 12.xx

Logic:
	read radius value from the user 'r'
	calcualte area = 3.141592653589793*r*r
	print area value 

	c ---> printf("%.2f",area); ---> 12.xx
	java-> System.out.printf("%.2f",area) ---> 12.xx
	python--> print("%.2f"%(area))

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int r;
    scanf("%d",&r);
    printf("%.2f",3.141592653589793*r*r);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int r = obj.nextInt();
        System.out.printf("%.2f",3.141592653589793*r*r);
    }
}

python implementation:
----------------------
r=int(input())
print("%.2f"%(3.141592653589793*r*r))





P021: CELSIUS TO FAHRENHEIT
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to convert temparature from Celsius to Fahrenheit.

input -----> celsius value 
output ----> fahrenheit value

FORMULA ---> F = (C*9/5)+32;

Ex:
	1 -----> 33

Logic:
	read "c" value as an integer
	f = (c*9/5) + 32
	print "f" value as an integer

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int c,f;
    scanf("%d",&c);
    f=(c*9/5)+32;
    printf("%d",f);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int c = obj.nextInt();
        int f = (c*9/5)+32;
        System.out.println(f);
    }
}

python implementation:
----------------------
c=int(input())
f=(c*9//5)+32
print(f)




P022: FAHRENHEIT TO CELSIUS
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to convert temparature from Fahrenheit to Celsius.

input -----> fahrenheit value 
output ----> celsius value

FORMULA: C = (F-32) * 5/9;

Ex:
	44 ----> (44-32) * 5/9
	   ----> 12 * 5/9
	   ----> 6

Logic:
	Read 'f' value from the user
	calcualte c value
	c = (f-32) * 5/9
	print c value on the screen

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int c,f;
    scanf("%d",&f);
    c=(f-32)*5/9;
    printf("%d",c);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int c,f;
        f=obj.nextInt();
        c=(f-32)*5/9;
        System.out.println(c);
    }
}

python implementation:
----------------------
f=int(input())
c=(f-32)*5//9
print(c)



P023: ACTUAL MEMORY SIZE OF USB DRIVE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program that takes the memory size as an argument and returns the actual memory size.

Note: The actual storage loss on a USB device is 7% of the overall memory size!

input -----> memory size in GB
output ----> actual memory size, round your result to two decimal places.

Ex:
	1 -----> 1-1*0.07 ---> 0.93


Logic:
	read actual memory size as 'n'
	print n-n*0.07

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf("%.2f",n-n*0.07);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        System.out.printf("%.2f",n-n*0.07);
    }
}

python implementation:
----------------------
n=int(input())
print("%.2f"%(n-n*0.07))




P024: FLIGHT LUGGAGE WEIGHT
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Kalyan is travelling to mumbai, but this time he is taking flight. His brother has already told him about luggage weight limits of flight but he forgot it. Now he is taking with him 3 trolly bags. As per the current airlines which Kalyan will fly. has below weight limits.

1) There can be at max 2 check-in and 1 cabin luggage. 
2) Check-in has total limit of L1.
3) Cabin has limit of L2.

Now, Kalyan has 3 luggage has weights as W1 and W2 and W3 respectively. Now he should be smart enough to make sure that he can travel with all the 3 luggage without paying extra charge.

Find out whether Kalyan can take all of his luggage without any extra charges or not. 
If all good and no extra changes were paid, output "Yes" otherwise "No".

input ------> integers W1,W2,W3 and L1,L2
output -----> Yes or No

Logic:
	read w1, w2, w3, l1 and l2
	w1+w2+w3<=l1+l2 print 'Yes' else 'No'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int w1,w2,w3,l1,l2;
    scanf("%d %d %d %d %d",&w1,&w2,&w3,&l1,&l2);
    printf((w1+w2+w3<=l1+l2)?"Yes":"No");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int w1,w2,w3,l1,l2;
        w1=obj.nextInt();
        w2=obj.nextInt();
        w3=obj.nextInt();
        l1=obj.nextInt();
        l2=obj.nextInt();
        System.out.println((w1+w2+w3<=l1+l2)?"Yes":"No");
    }
}

python implementation:
----------------------
w1,w2,w3,l1,l2 = (int(i) for i in input().split())
print("Yes" if w1+w2+w3<=l1+l2 else "No")


P025: SAVINGS
~~~~~~~~~~~~~
There are 3 friends named Denver, Berlin, Rio who worked at a compnay. Given thier monthly salaries and monthly expendictures, returns the highest saving amoung them.

input ------> single line with 6 space seperated integers.
output -----> highest saving amoung the 3 of them

Ex:
	10 9 45 10 15 15 ---> 1 35 0 ---> 35

Logic:
	read a1 a2 b1 b2 c1 c2 from user

	a = a1-a2
	b = b1-b2
	c = c1-c2

	(a>b && a>c)?a:((b>c)?b:c)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,a1,a2,b,b1,b2,c,c1,c2;
    scanf("%d %d %d %d %d %d",&a1,&a2,&b1,&b2,&c1,&c2);
    a=a1-a2;
    b=b1-b2;
    c=c1-c2;
    printf("%d",(a>b&&a>c)?a:((b>c)?b:c));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a1,a2,b1,b2,c1,c2,a,b,c;
        a1=obj.nextInt();
        a2=obj.nextInt();
        b1=obj.nextInt();
        b2=obj.nextInt();
        c1=obj.nextInt();
        c2=obj.nextInt();
        a = a1-a2;
        b = b1-b2;
        c = c1-c2;
        System.out.println((a>b && a>c)?a:(b>c?b:c));
    }
}

python implementation:
----------------------
a1,a2,b1,b2,c1,c2 = (int(i) for i in input().split())
a = a1-a2
b = b1-b2
c = c1-c2
print(max(a,b,c))




P026: MAXIMUM OF TWO NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given two integer values, print or return maximum value from the given integers.

input ------> two integer values
output -----> maximum value

Logic:
	read a, and b values
	(a>b)?a:b ---> c
	Math.max(a,b) ---> java
	max(a,b) --------> py

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",(a>b)?a:b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt();
        System.out.println(Math.max(a,b));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print(max(a,b))

P027: MINIMUM OF TWO NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given two integer values, print or return minimum value from the given integers.

input -----> two integer values
output ----> minimum value

Logic:
	read a, and b values
	(a<b)?a:b ---> c
	Math.min(a,b) ---> java
	min(a,b) --------> py

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",(a<b)?a:b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt();
        System.out.println(Math.min(a,b));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print(min(a,b))




P028: MAXIMUM OF THREE NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given three integer values, print or return maximum of three integers.

input -----> two integer values
output ----> maximum value

Ex:
	1, 2, 3 ----> 3
	1, 2, -3 ---> 2
	1, -2, -3 --> 1

Logic:
	read a,b and c values from the user

	c   ---> (a>b && a>c)?a:(b>c?b:c)
	java --> Math.max(Math.max(a,b),c)
	py ----> max(a,b,c)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    printf("%d",(a>b && a>c)?a:(b>c?b:c));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        System.out.println(Math.max(Math.max(a,b),c));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
c=int(input())
print(max(a,b,c))




P029: MINIMUM OF THREE NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given three integer values, print or return minimum of three integers.

input -----> two integer values
output ----> minimum value

Ex:
	1, 2, 3 ----> 1
	1, 2, -3 ---> -3
	1, -2, -3 --> -3

Logic:
	read a,b and c values from the user

	c   ---> (a<b && a<c)?a:(b<c?b:c)
	java --> Math.min(Math.min(a,b),c)
	py ----> min(a,b,c)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    printf("%d",(a<b && a<c)?a:(b<c?b:c));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        System.out.println(Math.min(Math.min(a,b),c));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
c=int(input())
print(min(a,b,c))

or

print(a if a>b and a>c else (b if b>c else c))





P030: SAME DIGIT
~~~~~~~~~~~~~~~~
Given two non-negative integer values, return true if they have the same last digit, Ex:27 and 57. 

input -----> two integer values
output ----> true or false

Ex:
	27, 57 ----> true
	27, 56 ----> false

Logic:
	read n1 and n2 values from the user

	if n1%10==n2%10 then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n1,n2;
    scanf("%d %d",&n1,&n2);
    printf((n1%10==n2%10)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt();
        int n2=obj.nextInt();
        System.out.println(n1%10==n2%10);
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
print('true' if n1%10==n2%10 else 'false')




P031: NEAREST TO 10
~~~~~~~~~~~~~~~~~~~
Given two integer values, return whichever value is nearest to the value 10, or return 0 in the event of a tie. 

input ------> two integer values
output -----> nearest value to a or 0

Ex:
	5,6 ----> 6
	5,3 ----> 5
	5,5 ----> 0

Logic:

	read a,b values from user

	adiff = abs(a-10)
	bdiff = abs(b-10)

	(adiff==bdiff)?0:(adiff<bdiff?a:b)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,ad,bd;
    scanf("%d %d",&a,&b);
    ad = abs(a-10);
    bd = abs(b-10);
    printf("%d",(ad==bd)?0:(ad<bd?a:b));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt(),ad,bd;
        ad = Math.abs(a-10);
        bd = Math.abs(b-10);
        System.out.println((ad==bd)?0:(ad<bd)?a:b);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
ad=abs(a-10)
bd=abs(b-10)
print(0 if ad==bd else (a if ad<bd else b))



P032: BOTH ARE IN RANGE 30 TO 40
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given two integer values, return true if they are both in the range 30..40 inclusive, or they are both in the range 40..50 inclusive.

input -----> two integer values
output ----> true or false

Ex:
	31, 33 ----> true
	21, 33 ----> false
	30, 40 ----> true
	40, 45 ----> true
	40, 50 ----> true
	40, 60 ----> false

Logic:
	read a and b values

	[(a>=30 and a<=40) and (b>=30 and b<=40)] or [(a>=40 and a<=50) and (b>=40 and 5<=40)]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf(((a>=30&&a<=40) && (b>=30&&b<=40))||((a>=40&&a<=50) && (b>=40&&b<=50))?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int b = obj.nextInt();
        System.out.println(((a>=30&&a<=40)&&(b>=30&&b<=40))||(a>=40&&a<=50)&&(b>=40&&b<=50));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print('true' if ((a>=30 and a<=40)and(b>=30 and b<=40))or((a>=40 and a<=50)and(b>=40 and b<=50)) else 'false')


(a>=30 and a<=40)and(b>=30 and b<=40)

a in range(30,41) and b in range(30,41)




P033: TEEN NUMBER
~~~~~~~~~~~~~~~~~
We'll say that a number is "teen" if it is in the range 13..19 inclusive. Given 3 int values, return true if 1 or more of them are teen.

input -----> three integer values
output ----> true or false

Ex:
	13, 14, 15 ---> true
	10, 11, 12 ---> false
	11, 12, 13 ---> true

Logic:
	read three values from the user

	(a>=13 and a<=19) or (b>=13 and b<=19) or (c>=13 and c<=19) then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    printf((a>=13 && a<=19)||(b>=13 && b<=19)||(c>=13 && c<=19)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int b = obj.nextInt();
        int c = obj.nextInt();
        System.out.println((a>=13&&a<=19)||(b>=13&&b<=19)||(c>=13&&c<=19));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
c=int(input())
print('true' if 13<=a<=19 or 13<=b<=19 or 13<=c<=19 else 'false')

P034: MULTIPLE OF 3 OR 5
~~~~~~~~~~~~~~~~~~~~~~~~
Return true if the given non-negative number is a multiple of 3 or a multiple of 5. 

input -----> an integer value from the user
output ----> true or false

Ex:
	3	true
	4	false
	5	true

logic:
	read a number 'n' from the user

	(n%3==0 or n%5==0) then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf((n%3==0 || n%5==0)?"true":"false");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(n%3==0 || n%5==0);
    }
}

python implementation:
----------------------
n=int(input())
print('true' if n%3==0 or n%5==0 else 'false')





P035: INVERT COLORS
~~~~~~~~~~~~~~~~~~~
Implement a program to read r,g and b values from the user and invert the color values.
Hint: the range of any color in hexadecimal form is from 0 to 255

input -----> three space seperated integers
output ----> inverted color values seperated by sapaces

Ex:
	255 255 255 ----> 0 0 0
	100 200 100 ----> 155 55 155

Logic:
	read r,g and b values
	print 255-r, 255-g and 255-b

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int r,g,b;
    scanf("%d %d %d",&r,&g,&b);
    printf("%d %d %d",255-r,255-g,255-b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        System.out.println((255-a)+" "+(255-b)+" "+(255-c));
    }
}

python implementation:
----------------------
r,g,b=(int(i) for i in input().split())
print(255-r,255-g,255-b)

selection statements:
---------------------

c/java

Ex:

if(condition)
{
	-------------
	-------------
	-------------
	-------------
}

Ex:

if(condition)
{
	----------------
	----------------
}
else
{
	----------------
	----------------
}

Ex:

if(cond1)
{
	-----------------
	-----------------
}
else if(cond2)
{
	-----------------
	-----------------
}
else if(cond3)
{
	-----------------
	-----------------
}
.
.
else
{
	----------------
	----------------
}

Ex:

if(condition)
{
	if(condition)
	{
		-----------
		-----------
	}
	else
	{
		-----------
		-----------
	}
}
else
{
	if(condition)
	{
		-----------
		-----------
	}
	else
	{
		-----------
		-----------
	}
}

simple if, if else, else if [elif] , nested if

{} are not allowed in python ----> indentation :

Ex:

if condition:
    ---------------
    ---------------
    ---------------
    ---------------
    ---------------

Ex:

if condition:
    ------------
    ------------
    ------------
else:
    ------------
    ------------
    ------------

Ex:

if cond1:
    ---------
    ---------
elif cond2:
    ---------
    ---------
elif cond3:
    ---------
    ---------
.
.
.
else:
    --------
    --------

Ex:

if condition:
    if condition:
         ------------
         ------------
         -----------
    else:
         ------------
         ------------
         ------------
else:
    -----------
    -----------
    -----------
    -----------



P036: EVEN OR ODD
~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is even or odd number.

input -----> an integer value from the user
output ----> even or odd

Ex:
	2 -----> even
	3 -----> odd
	4 -----> even

Logic:
	read n value

	if(n%2==0)
	{
		print even
	}
	else
	{
		print odd
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n%2==0)
        printf("even");
    else
        printf("odd");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        if(n%2==0)
            System.out.println("even");
        else
            System.out.println("odd");
    }
}

python implementation:
----------------------
n=int(input())
if n%2==0:
    print('even')
else:
    print('odd')




P037: BIGGEST OF FOUR NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find biggest of four numbers.

input ------> four integer values from the user
output -----> biggest value

Ex:
	1 2 3 4 ----> 4
	1 2 3 -4 ---> 3

Logic:
	read a,b,c and d value

	if(a>b && a>c && a>d)
		print a
	else if(b>a && b>c && b>d)
		print b
	else if(c>a && c>b && c>d)
		print c
	else
		print d

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c,d;
    scanf("%d %d %d %d",&a,&b,&c,&d);
    if(a>b && a>c && a>d)
        printf("%d",a);
    else if(b>a && b>c && b>d)
        printf("%d",b);
    else if(c>a && c>b && c>d)
        printf("%d",c);
    else
        printf("%d",d);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt();
        int b=obj.nextInt();
        int c=obj.nextInt();
        int d=obj.nextInt();
        if(a>b && a>c && a>d)
            System.out.println(a);
        else if(b>a && b>c && b>d)
            System.out.println(b);
        else if(c>a && c>b && c>d)
            System.out.println(c);
        else
            System.out.println(d);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
c=int(input())
d=int(input())
if a>b and a>c and a>d:
    print(a)
elif b>a and b>c and b>d:
    print(b)
elif c>a and c>b and c>d:
    print(c)
else:
    print(d)




P038: SMALLEST OF FIVE NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find smallest of five numbers.

input -----> five space seperated integers
output ----> smallest of five integers

Ex:
	1 2 3 4 5 -----> 1
	1 2 -3 4 5 ----> -3

Logic:
	read a,b,c,d and e values

	if(a<b && a<c && a<d && a<e)
		print a
	else if(b<a && b<c && b<d && b<e)
		print b
	else if(c<a && c<b && c<d && c<e)
		print c
	else if(d<a && d<b && d<c && d<e)
		print d
	else
		print e

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c,d,e;
    scanf("%d %d %d %d %d",&a,&b,&c,&d,&e);
    if(a<b && a<c && a<d && a<e)
        printf("%d",a);
    else if(b<a && b<c && b<d && b<e)
        printf("%d",b);
    else if(c<a && c<b && c<d && c<e)
        printf("%d",c);
    else if(d<a && d<b && d<c && d<e)
        printf("%d",d);
    else
        printf("%d",e);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt(),c=obj.nextInt(),d=obj.nextInt(),e=obj.nextInt();
        System.out.println(Math.min(Math.min(Math.min(Math.min(a,b),c),d),e));
    }
}

python implementation:
----------------------
a,b,c,d,e=(int(i) for i in input().split())
print(min(a,b,c,d,e))

P039: WEIRD OR NOT WEIRD
~~~~~~~~~~~~~~~~~~~~~~~~
Given an integer n, perform the following conditional actions,
If n is odd, print weird,
If n is even and in the inclusive range of 2 to 5, print not weird,
If n is even and in the inclusive range 6 to 20, print weird,
If n is even and greater than 20, print not weird.

input --------> An integer value from the user.
output -------> weird or not weird

Ex:
	3 ----> weird
	4 ----> not weird
	8 ----> weird
	40 ---> not weird

logic:
	read 'n' value from the user

	if(n%2!=0)
		then print 'werid'
	else
	{
		if(n>=2 and n<=5)
			print 'not weird'
		else if(n>=6 and n<=20)
			print 'weird'
		else
			print 'not weird'
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n%2!=0)
        printf("weird");
    else
    {
        if(n>=2 && n<=5)
            printf("not weird");
        else if(n>=6 && n<=20)
            printf("weird");
        else
            printf("not weird");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        if(n%2!=0)
            System.out.println("weird");
        else
        {
            if(n>=2 && n<=5)
                System.out.println("not weird");
            else if(n>=6 && n<=20)
                System.out.println("weird");
            else
                System.out.println("not weird");
        }
    }
}

python implementation:
----------------------
n=int(input())
if n%2!=0:
    print('weird')
else:
    if n>=2 and n<=5:
        print('not weird')
    elif n>=6 and n<=20:
        print('weird')
    else:
        print('not weird')




P040: NEON NUMBER
~~~~~~~~~~~~~~~~~
Rahul's teacher gave an assignment to all the student that when they show up tomorrow they should find a special type of number and report her. He thought very carefully and came up with an idea to have neon numbers. A neon number is a two digit number where the square of the sum of each digit of the number results in the given number.Given an integer  N, Write a programto find whether the number N is a Neon number. 

input -------> an integer number
output ------> true or false

Ex:
	81 ----> (8+1)*(8+1) = 9*9 = 81
	91 ----> (9+1)*(9+1) = 10*10 = 100

Logic:
	read 'n' value from the user

	a=n%10
	b=(n/10)%10
	c=(a+b)*(a+b)

	if c==n then print 'true' else 'false'


c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a,b,c;
    scanf("%d",&n);
    a=n%10;
    b=(n/10)%10;
    c=(a+b)*(a+b);
    printf((n==c)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a,b,c;
        a=n%10;
        b=(n/10)%10;
        c=(a+b)*(a+b);
        System.out.println(n==c);
    }
}

python implementation:
----------------------
n=int(input())
a=n%10
b=(n//10)%10
c=(a+b)*(a+b)
print('true' if c==n else 'false')





P041: COMPARE STRING BY COUNT OF CHARACTERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program that takes two strings as inputs and print either true or false depending on whether the total number of characters in the first string is equal to the total number of characters in the second string.

input -------> two strings
output ------> true or false

Ex:
	test, demo ----> true
	abc, abcd -----> false

logic:
	read string 's1' from user
	read string 's2' from user
	find length of s1 ---> n1
	find length of s2 ---> n2
	if(n1==n2)
		print 'true'
	else
		print 'false'


c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s1[100],s2[100];
    int n1,n2;
    scanf("%s",s1);
    scanf("%s",s2);
    n1 = strlen(s1);
    n2 = strlen(s2);
    //printf("%d %d",n1,n2);
    if(n1==n2)
        printf("true");
    else
        printf("false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s1 = obj.nextLine();
        String s2 = obj.nextLine();
        System.out.println(s1.length()==s2.length());            
    }
}

python implementation:
----------------------
s1=input()
s2=input()
if len(s1)==len(s2):
    print('true')
else:
    print('false')





P042: CONVERT NUMBER TO CORRESPONDING MONTH NAME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a program that takes a number (from 1 to 12) and print its corresponding month name as a string. For example, if you're given 3 as input, your program should print "March", because March is the 3rd month.

Number	Month Name
1	January
2	February
3	March
4	April
5	May
6	June
7	July
8	August
9	September
10	October
11	November
12	December

input ------> read a number 
output -----> Month name

Ex:
	2	February
	12	December
Logic:
	read 'n' value from the user
	if(n==1)
		print 'January'
	else if(n==2)
		print 'February'
	.
	.
	.
	else
		print 'invalid'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n==1)
        printf("January");
    else if(n==2)
        printf("February");
    else if(n==3)
        printf("March");
    else if(n==4)
        printf("April");
    else if(n==5)
        printf("May");
    else if(n==6)
        printf("June");
    else if(n==7)
        printf("July");
    else if(n==8)
        printf("August");
    else if(n==9)
        printf("September");
    else if(n==10)
        printf("October");
    else if(n==11)
        printf("November");
    else if(n==12)
        printf("December");
    else
        printf("invalid");
    return 0;
}

Java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        if(n==1)
            System.out.println("January");
        else if(n==2)
            System.out.println("February");
        else if(n==3)
            System.out.println("March");
        else if(n==4)
            System.out.println("April");
        else if(n==5)
            System.out.println("May");
        else if(n==6)
            System.out.println("June");
        else if(n==7)
            System.out.println("July");
        else if(n==8)
            System.out.println("August");
        else if(n==9)
            System.out.println("September");
        else if(n==10)
            System.out.println("October");
        else if(n==11)
            System.out.println("November");
        else if(n==12)
            System.out.println("December");
        else
            System.out.println("invalid");
    }
}

Python Implementation:
----------------------
n=int(input())
if n==1:
    print("January")
elif n==2:
    print("February")
elif n==3:
    print("March")
elif n==4:
    print("April")
elif n==5:
    print("May")
elif n==6:
    print("June")
elif n==7:
    print("July")
elif n==8:
    print("August")
elif n==9:
    print("September")
elif n==10:
    print("October")
elif n==11:
    print("November")
elif n==12:
    print("December")
else:
    print("invalid")





P043: SAY "HELLO", SAY "BYE"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program that takes a string name and a number num (either 0 or 1) and print "Hello" + name if num is 1, otherwise return "Bye" + name.

input -----> string and number
output ----> "Hello<name>" or "Bye<name>"

Ex:
	prakash, 1 -----> Hello prakash
	prakash, 0 -----> Bye prakash
	admin, 1 -------> Hello admin

Logic:
	   read name
	   read number
	   if(num==1)
	   		print "Hello " and name
	   else
	        print "Bye " and name

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char name[100];
    int n;
    scanf("%s",name);
    scanf("%d",&n);
    if(n==1)
        printf("Hello %s",name);
    else
        printf("Bye %s",name);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String name = obj.nextLine();
        int num = obj.nextInt();
        if(num==1)
            System.out.println("Hello "+name);
        else
            System.out.println("Bye "+name);
    }
}

python implementation:
----------------------
name = input()
num = int(input())

if num==1:
    print("Hello",name)
else:
    print("Bye",name)





P044: ALONE SUM
~~~~~~~~~~~~~~~
Given 3 int values, a b c, print their sum. However, if one of the values is the same as another of the values, it does not count towards the sum.

input -----> a,b and c values
output ----> sum or 0

Ex:
	1 2 3 ---> 6
	1 2 1 ---> 2
	1 2 2 ---> 1
	1 1 1  --> 0
	1 1 2 ---> 2

Logic:
		read a,b and c values

		if (a!=b && b!=c && c!=a)
			print a+b+c
		else if(a==b && a==c && b==c)
			print 0
		else if(a==b)
			print c
		else if(b==c)
			print a
		else 
			print b

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    if(a!=b && b!=c && c!=a)
        printf("%d",a+b+c);
    else if(a==b && a==c && b==c)
        printf("0");
    else if(a==b)
        printf("%d",c);
    else if(b==c)
        printf("%d",a);
    else
        printf("%d",b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        if(a!=b && b!=c && c!=a)
            System.out.println(a+b+c);
        else if(a==b && b==c && c==a)
            System.out.println(0);
        else if(a==b)
            System.out.println(c);
        else if(a==c)
            System.out.println(b);
        else
            System.out.println(a);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
c=int(input())
if a!=b and b!=c and c!=a:
    print(a+b+c)
elif a==b and b==c and c==a:
    print(0)
elif a==b:
    print(c)
elif b==c:
    print(a)
else:
    print(b)





P045: LOWER CASE ENGLISH WORD
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given a positive integer n value, 1<=n<=9, print corresponding english word like 1->one.

input ----> an integer value
output ---> english word

Ex:
	1 ---> one
	5 ---> five
	9 ---> nine

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n==1)
        printf("one");
    else if(n==2)
        printf("two");
    else if(n==3)
        printf("three");
    else if(n==4)
        printf("four");
    else if(n==5)
        printf("five");
    else if(n==6)
        printf("six");
    else if(n==7)
        printf("seven");
    else if(n==8)
        printf("eight");
    else if(n==9)
        printf("nine");
    else
        printf("invalid");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        if(n==1)
            System.out.println("one");
        else if(n==2)
            System.out.println("two");
        else if(n==3)
            System.out.println("three");
        else if(n==4)
            System.out.println("four");
        else if(n==5)
            System.out.println("five");
        else if(n==6)
            System.out.println("six");
        else if(n==7)
            System.out.println("seven");
        else if(n==8)
            System.out.println("eight");
        else if(n==9)
            System.out.println("nine");
        else
            System.out.println("invalid");
    }
}


python implementation:
----------------------
n=int(input())
if n==1:
    print('one')
elif n==2:
    print('two')
elif n==3:
    print('three')
elif n==4:
    print('four')
elif n==5:
    print('five')
elif n==6:
    print('six')
elif n==7:
    print('seven')
elif n==8:
    print('eight')
elif n==9:
    print('nine')
else:
    print('invalid')





P046: FIZZBUZZ
~~~~~~~~~~~~~~
Given a number n, print the result value per line as follows.

=> if n is a multiple of both 3 and 5 print FizzBuzz
=> if n is a multiple of 3 (but not 5), print Fizz
=> if n is a multiple of 5 (but not 3), print Buzz
=> if n is not a multiple of 3 or 5 print the value of n.

implement a program to read number n print the output as described above.

input ------> a number n
output -----> print n string as per the above rules.

Ex:
	15 -----> FizzBuzz
	9 ------> Fizz
	10 -----> Buzz
	7 ------> 7

Logic:
	
	read 'n' value from the user

	if(n%3==0 and n%5==0)
		print 'FizzBuzz'
	else if(n%3==0 and n%5!=0)
		print 'Fizz'
	else if(n%3!=0 and n%5==0)
		print 'Buzz'
	else
		print n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n%3==0 && n%5==0)
        printf("FizzBuzz");
    else if(n%3==0 && n%5!=0)
        printf("Fizz");
    else if(n%3!=0 && n%5==0)
        printf("Buzz");
    else
        printf("%d",n);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        if(n%3==0 && n%5==0)
            System.out.println("FizzBuzz");
        else if(n%3==0 && n%5!=0)
            System.out.println("Fizz");
        else if(n%3!=0 && n%5==0)
            System.out.println("Buzz");
        else
            System.out.println(n);
    }
}

python implementation:
----------------------
num=int(input())
if (num%3==0 and num%5==0):
    print("FizzBuzz")
elif (num%3==0 and num%5!=0):
    print("Fizz")
elif (num%5==0 and num%3!=0):
    print("Buzz")
elif (num%3!=0 or num%5!=0):
    print(num)





P047: VACCINATION DRIVE LIST PREPARATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Currently government is taking lot of measures to control the spread of Coronavirus. As we have vaccine now, many campaigns are done to vaccination. Health dept is identifying the people in each area and recommended/vaccination of them. They are planning three stages

stage1: above 60 years
stage2: between 18 and 60
stage3: below 18 years

Implement a program to read date of birth of the person and decide he belong to which stage.

input -----> date of birth (yyyy)
output ----> 1 or 2 or 3

Ex:
	2000 ----> 2022-2000 ---> 22 ---> 2

Logic:
		read 'year' value from the user
		age = 2022 - year

		if age>=60 then print 1
		else if age>=18 and age<60 then print 2
		else print 3
Note:
import time
print(time.strftime('%d-%m-%Y')) ---> 11-10-2022
print(time.strftime('%Y')) ---------> 2022

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int year,age;
    scanf("%d",&year);
    age = 2022-year;
    if(age>=60)
        printf("1");
    else if(age>=18 && age<60)
        printf("2");
    else
        printf("3");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int year=obj.nextInt(),age;
        age = 2022-year;
        if(age>=60)
            System.out.println(1);
        else if(age>=18 && age<60)
            System.out.println(2);
        else
            System.out.println(3);
    }
}

python implementation:
----------------------
year=int(input())
age=2022-year
if age>=60:
    print('1')
elif age>=18 and age<60:
    print('2')
else:
    print('3')

another version (pranab)
------------------------
from datetime import date

todays_date = date.today()
yr=todays_date.year
n = int(input())

age = yr-n
if age>=60:
    print("1")
elif age>=18 and age<=60:
    print("2")
else:
    print("3")

P048: EMPLOYEES RATING POINT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In a company, an employee's rating point (ERP) is calculated as the sum of the rating points given by the employee's manager and HR. The employee rating grade (ERG) is calculated according to the ERP ranges given below.

ERP		ERG
30-50	D
51-60	C
61-80	B
81-100	A

Write an algorithm to find the ERG character for a given employee's ERP.

input -------> an integer value 
output ------> employee rating grade

Ex:
	45 ---> D
	54 ---> C
	61 ---> B
	90 ---> A

Logic:
		read ERP value from user as 'n'

		if n>=30 and n<=50 then print 'D'
		else if n>=51 and n<=60 then print 'C'
		else if n>=61 and n<=80 then print 'B'
		else print 'A'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n>=30 && n<=50)
        printf("D");
    else if(n>=51 && n<=60)
        printf("C");
    else if(n>=61 && n<=80)
        printf("B");
    else
        printf("A");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        if(n>=30 && n<=50)
            System.out.println("D");
        else if(n>=51 && n<=60)
            System.out.println("C");
        else if(n>=61 && n<=80)
            System.out.println("B");
        else
            System.out.println("A");
    }
}

python implementation:
----------------------
n = int(input())
if n>=30 and n<=50:
    print("D")
elif n>=51 and n<=60:
    print("C")
elif n>=61 and n<=80:
    print("B")
else:
    print("A")




P049: PUZZLE
~~~~~~~~~~~~~
Dennis was solving a puzle. the puzzle was to verify a number whose cube ends with the number itself. Help Dennis to find the solution of the puzzle and write the code accordingly.

input --------> integer value to verified
output -------> boolean value True or False

Ex:
	1 ---> 1 ----> true
	2 ---> 8 ----> false
	5 ---> 125 --> true
	6 ---> 216 --> true
	7 ---> 343 --> false

Logic:
		read 'n' value from the user

		if((n*n*n)%10==n) then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if((n*n*n)%10==n)
        printf("true");
    else
        printf("false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();     
        System.out.println(((n*n*n)%10==n)?true:false);
    }
}

python implementation:
----------------------
n = int(input())
n1 = n*n*n
if n1%10==n:
    print("true")
else:
    print("false")





P050: POWER FUNCTION
~~~~~~~~~~~~~~~~~~~~
In a mathematics class, the students are beign taught power function. So "a" raised to the power of "b" is shown as a^b and the calculatation goes as a*a*a...b times. Now there is slight twist to the problem, the students have to find out the last digit of the resultant a^b. 

input -----> an integer value as base and power
output ----> last digit of a^b

Ex:
	2,3 ----> 8 ----> 8
	5,3 ----> 125 --> 5
	10,2 ---> 100 --> 0

Logic:
		
		read 'a' and 'b' values from the user.

		print ((int)pow(a,b))%10

		print (a**b)%10

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",((int)pow(a,b))%10);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt();
        System.out.println(((int)Math.pow(a,b))%10);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print((a**b)%10)

P001 ---> P050 ---> fundamentals and how to code....


case1: i want to send email to all 'gmail' customers.------------> while

if dn't know the number of iterations, then we can go for 'while' loop

while(condition)
{
	----------
}

case2: i want to send email to all emp in 'wipro' company. ------> for

if know the number of iterations in advance, then we should for 'for' loop

for(intialization[I]; condition[C]; updation[U])
{
	---------
}





P051: EXTRACT DIGITS FROM THE GIVEN NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read a number and extracts digits from the given number from right to left.

input ------> an integer value from the user
output -----> digits


Ex:
	123 ----> 3, 2, 1
	1234 ---> 4, 3, 2, 1
	12 -----> 2, 1

Logic:
		read 'n' value from the user

		while(n!=0)
		{
			d=n%10;
			print d
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        printf("%d\n",d);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int d,n=obj.nextInt();
        while(n!=0)
        {
            d=n%10;
            System.out.println(d);
            n=n/10;
        }
    }
}

python implementation:
----------------------
n=int(input())
while n!=0:
    d=n%10
    print(d)
    n=n//10





P052: SUM OF DIGITS 
~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of digits present in the given number 'n'.

input ------> an integer value from the user
output -----> sum of digits

Ex:
	123 ---> 1+2+3 = 6
	12345 -> 1+2+3+4+5 = 15

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			sum=sum+d;
			n=n/10;
		}
		print sum

C implementation:
----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int sum=0,d,n;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        sum=sum+d;
        n=n/10;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s,d;
        s=0;
        while(n!=0)
        {
            d=n%10;
            s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------

version1:
---------
n=int(input())
s=0
while n!=0:
    d=n%10
    s=s+d
    n=n//10
print(s)

version2:
---------
print(sum([int(i) for i in input()]))





P053: SUM OF EVEN DIGITS 
~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of even digits present in the given number 'n'.

input ------> an integer value from the user
output -----> sum of even digits

Ex:
	1234 ----> 2+4=6
	135 -----> 0

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d%2==0)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if int(i)%2==0]))

P054: SUM OF ODD DIGITS 
~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of odd digits present in the given number 'n'.

input ------> an integer value from the user
output -----> sum of odd digits

Ex:
	1234 ----> 1+3=4
	135 -----> 1+3+5=9

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d%2!=0)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d%2!=0)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%2!=0)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if int(i)%2!=0]))






P055: SUM OF PRIME DIGITS 
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of prime digits present in the given number 'n'.

input ------> an integer value from the user
output -----> sum of prime digits

Ex:
	1234 ----> 2+3=5
	135 -----> 3+5=8
	123 -----> 2+3=5

Digits ----------> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
Prime Digits ----> 2, 3, 5, 7

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d==2 or d==3 or d==5 or d==7)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d==2 || d==3 || d==5 || d==7)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d==2 || d==3 || d==5 || d==7)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if i in '2357']))





P056: DIVISIBLE BY 3
~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of digits which are divisible by 3.

input ------> an integer value from the user
output -----> sum of digits divisible by 3

Ex:
	123456 ----> 3, 6 ----> 3+6=9

Logic:

		sum=0;
		while(n!=0)
		{
			d=n%10;
			if(d%3==0)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,s=0;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        if(d%3==0)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%3==0)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if i in '369']))




P057: COUNT OF DIGITS
~~~~~~~~~~~~~~~~~~~~~
Implement a program to count number of digits present in the given number.

input -----> an integer value
output ----> count of digits

Ex:
	123 -----> 3
	12345 ---> 5

Logic:
		count=0;
		while(n!=0)
		{
			count++;
			n=n/10;
		}
		print count;

Logic:
		read the number in the form of string...
		c    ---> strlen(s)
		java ---> s.length()
		py -----> len(s)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int c=0,n;
    scanf("%d",&n);
    while(n!=0)
    {
        c++;
        n=n/10;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        System.out.println(s.length());
    }
}

python implementation:
----------------------
s=input()
print(len(s))






P058: NUMBER OF OCCURRENCES
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find number of occurrences the given digit in the number.

input ------> an integer number and digit
output -----> number of occurrences

Ex:
	1234, 3 -----> 1
	1211, 1------> 3

Logic:
		c=0;
		while(n!=0)
		{
			d=n%10;
			if(d==dd)
				c++;
			n=n/10;
		}
		print c;

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,dd,c;
    scanf("%d %d",&n,&dd);
    c=0;
    while(n!=0)
    {
        d=n%10;
        if(d==dd)
            c++;
        n=n/10;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),dd=obj.nextInt(),d,c=0;
        while(n!=0)
        {
            d=n%10;
            if(d==dd)
                c++;
            n=n/10;
        }
        System.out.println(c);
    }
}

python implementation:
----------------------
n=input()
dd=input()
print(n.count(dd))


P059: MAX DIGIT
~~~~~~~~~~~~~~~
Implement a program to find the max digit present in the given number.

input ------> an integer value
output -----> max digit

Ex:
	1231 -----> 3
	9102 -----> 9

Logic:
		m=0;
		while(n!=0)
		{
			d=n%10;
			if(m<d)
				m=d;
			n=n/10;
		}
		print m

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int m,n,d;
    scanf("%d",&n);
    m=0;
    while(n!=0)
    {
        d=n%10;
        if(m<d)
            m=d;
        n=n/10;
    }
    printf("%d",m);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=0,d;
        while(n!=0)
        {
            d=n%10;
            if(m<d)
                m=d;
            n=n/10;
        }
        System.out.println(m);
    }
}

python implementation:
----------------------
print(max([int(i) for i in input()]))






P060: MIN DIGIT
~~~~~~~~~~~~~~~
Implement a program to find the min digit present in the given number.

input ------> an integer value
output -----> min digit

Ex:
	1231 -----> 1
	9102 -----> 0

Logic:
		m=99;
		while(n!=0)
		{
			d=n%10;
			if(d<m)
				m=d;
			n=n/10;
		}
		print m

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int m,n,d;
    scanf("%d",&n);
    m=99;
    while(n!=0)
    {
        d=n%10;
        if(d<m)
            m=d;
        n=n/10;
    }
    printf("%d",m);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=99,d;
        while(n!=0)
        {
            d=n%10;
            if(d<m)
                m=d;
            n=n/10;
        }
        System.out.println(m);
    }
}

python implementation:
----------------------
print(min([int(i) for i in input()]))





P061: ODDISH OR EVENISH
~~~~~~~~~~~~~~~~~~~~~~~
Implement a program that determines whether a number is oddish or evenish, a number is oddish if the sum of all digits is odd and evenish if the sum of all digits is even. print the output as oddish or evenish.

input -----> an integer value
output ----> oddish or evenish

Ex:
	123 ---> 1+2+3=6    ----> evenish
	1234 --> 1+2+3+4=10    -> evenish
	12345 -> 1+2+3+4+5=15 --> oddish

Logic:
		sum=0;
		while(n!=0)
		{
			d=n%10;
			sum=sum+d;
			n=n/10;
		}
		if sum%2==0 then print 'evenish' else 'oddish'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,s=0;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        s=s+d;
        n=n/10;
    }
    printf((s%2==0)?"evenish":"oddish");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d,s;
        s=0;
        while(n!=0)
        {
            d=n%10;
            s=s+d;
            n=n/10;
        }
        System.out.println((s%2==0)?"evenish":"oddish");
    }
}

python implementation:
----------------------
s=sum([int(i) for i in input()])
print('evenish' if s%2==0 else 'oddish')






P062: REVERSE THE NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to calcualte the reverse of the given number.

input ----> an integer value
output ---> reverse of the number

Ex:
    123 ----> 321
    121 ----> 121

Logic:
		r=0;
		while(n!=0){
			d=n%10;
			r=r*10+d;
			n=n/10;
		}
		print r

C/Java/Py ----> Core Logic
Java/Py ------>

				The input in the form of string

				java ----> StringBuffer ---> reverse
				Py ------> String ---------> s[::-1]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,r=0,d;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    printf("%d",r);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        StringBuffer sb = new StringBuffer(s);
        System.out.println(sb.reverse());
    }
}

python implementation:
----------------------
s=input()
print(s[::-1])

P063: PALINDROME NUMBER OR NOT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is palindrome or not.

input ----> an integer value
output ---> true or false

Ex:
	123 ----> 321 ---> false
	121 ----> 121 ---> true

Logic:
		r=0;
		temp=n;
		while(n!=0)
		{
			d=n%10;
			r=r*10+d;
			n=n/10;
		}
		if temp==r then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,r,temp;
    scanf("%d",&n);
    temp=n;
    r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    printf((temp==r)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),r,d,temp;
        temp=n;
        r=0;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        System.out.println(temp==r);
    }
}

python impelemtation:
---------------------
s=input()
print('true' if s==s[::-1] else 'false')


P064: ADD FIRST AND LAST DIGIT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read a number and print sum of first and last digit in the given number.

input ----> an integer value
output ---> an int value

Ex:
	123 ----> 1+3 = 4
	123456--> 1+6 = 7

Logic:
		
		ld = n%10;
		n=rev(n);
		fd = n%10;
		print ld + fd

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n,ld,fd;
    scanf("%d",&n);
    fd=n%10;
    n=rev(n);
    ld=n%10;
    printf("%d",fd+ld);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int d,r=0;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),fd,ld;
        fd=n%10;
        n=rev(n);
        ld=n%10;
        System.out.println(fd+ld);
    }
}

python implementation:
----------------------
def rev(n):
    r=0
    while n!=0:
        d=n%10
        r=r*10+d
        n=n//10
    return r

n=int(input())
fd=n%10
n=rev(n)
ld=n%10
print(fd+ld)

P065: COUNT EVEN AND ODD NUMBER OF DIGITS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to count number of even and odd digits and print.

input -----> an integer
output ----> count even and odd digits

Ex:
	123 ----> 1, 2
	1234 ---> 2, 2
	222 ----> 3, 0
	333 ----> 0, 3

Logic:
		read 'n' value
		ec = 0
		oc = 0
		while(n!=0)
		{
			d=n%10;
			if(d%2==0)
				ec++;
			else
				oc++;
			n=n/10;
		}
		print ec and oc

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,ec=0,oc=0;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            ec++;
        else
            oc++;
        n=n/10;
    }
    printf("%d\n%d",ec,oc);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),ec=0,oc=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                ec++;
            else
                oc++;
            n=n/10;
        }
        System.out.println(ec);
        System.out.println(oc);
    }
}

python implementation:
----------------------
n=int(input())
ec=0
oc=0
while n!=0:
    d=n%10
    if d%2==0:
        ec=ec+1
    else:
        oc=oc+1
    n=n//10
print(ec)
print(oc)





P066: E-COMMERCE CUSTOMERS  DISCOUNT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
An e-commerce company plans to give their customers a discount for the newyears holiday. The discount will be calcualted on the basis of the bill amount of the order placed. The discount amount is the sum of all the odd digits in the customers total bill amount. if no odd digits is present in the bill amount, then discount will be zero.

input ----> bill amount
output ---> an integer value

Ex:
	1234 ----> 1+3=4
	135 -----> 1+3+5=9

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d%2!=0)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d%2!=0)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%2!=0)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if int(i)%2!=0]))





P067: DATA ENCRYPTION KEY
~~~~~~~~~~~~~~~~~~~~~~~~~
The IT Company "Soft ComInfo" has decided to transfer its messages through the N/W using new encryption technique. The company has decided to encrypt the data using the non-prime number concept. The message is in the form of a number and the sum of non-prime digits present in the message is used as the encryption key.

input -----> a number from the user
output ----> encryption key

Ex:
	prime digits ----> 2, 3, 5, 7
	non-prime digits-> 4, 6, 8, 9

	12345 -----> 4
	23456 -----> 4+6=10

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d==4 or d==6 or d==8 or d==9)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d==4 || d==6 || d==8 || d==9)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d==4 || d==6 || d==8 || d==9)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if i in '4689']))





P068: SECURE DATA TRANSMISSION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A company wishes to transmit data to another server. The data consists of numbers only. To secure the data during transmission, they plan to reverse the data during transmission; they plan to reverse the data first. Write an algorithm to reverse the data first.

input -----> data to be transmitted
output ----> reverse the data

Ex:
    123 ----> 321
    121 ----> 121

Logic:
		r=0;
		while(n!=0){
			d=n%10;
			r=r*10+d;
			n=n/10;
		}
		print r

C/Java/Py ----> Core Logic
Java/Py ------>

				The input in the form of string

				java ----> StringBuffer ---> reverse
				Py ------> String ---------> s[::-1]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,r=0,d;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    printf("%d",r);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        StringBuffer sb = new StringBuffer(s);
        System.out.println(sb.reverse());
    }
}

python implementation:
----------------------
s=input()
print(s[::-1])





P069: ONE TIME PASSWORD
~~~~~~~~~~~~~~~~~~~~~~~
A company wishes to devise an order confirmation procedure. They plan to require an extra confirmation instead of simply auto-confirming the order at the time it is placed. For this purpose, the system will generate one time password to be shared with the customer. The customer who is placing the order has to enter the OTP to confirm the order. The OTP generated for the requested order ID, as the product of the digits in orderID. 

Write an algorithm to find the OTP for the OrderID.

input -----> an integer value
output ----> OTP i.e. product of digits

Ex:
	123 ---> 1*2*3 = 6
	192 ---> 1*9*2 = 18

Logic:
		otp = 1
		while(n!=0)
		{
			d=n%10;
			otp=otp*d;
			n=n/10;
		}
		print otp

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,otp;
    scanf("%d",&n);
    otp=1;
    while(n!=0){
        d=n%10;
        otp=otp*d;
        n=n/10;
    }
    printf("%d",otp);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),otp=1,d;
        while(n!=0)
        {
            d=n%10;
            otp=otp*d;
            n=n/10;
        }
        System.out.println(otp);
    }
}

python implementation:
----------------------
n=int(input())
otp=1
while n!=0:
    d=n%10
    otp=otp*d
    n=n//10
print(otp)





P070: NEAREST PALINDROME
~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find nearest greater paliandrome 

input ---------> an integer value
output --------> print nearest paliandrome value

Ex:
	90 ---> 90, 91, 92, 93, 94, 95, 96, 97, 98, 99 ---> 99
	100 --> 100, 101 ----> 101
	700 --> 700, 701, 702, 703, 704, 705, 706, 707 ---> 707

Logic:
		read 'n' value
		while(true)
		{
			if(n==rev(n))
			{
				print n
				break
			}
			n++;
		} 


c -----> while(1)
java --> while(true)
py ----> while True:

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n){
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n;
    scanf("%d",&n);
    while(1){
        if(n==rev(n))
        {
            printf("%d",n);
            break;
        }
        n++;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        while(true)
        {
            if(n==rev(n))
            {
                System.out.println(n);
                break;
            }
            n++;
        }
    }
}

python implementation:
----------------------
n=int(input())
while True:
    if n==int(str(n)[::-1]):
        print(n)
        break
    n=n+1






P071: MATHEMATICAL TRICKS
~~~~~~~~~~~~~~~~~~~~~~~~~
Aryan is studying in the 5th standard. He is very interested in mathematical tricks and always wanted to play with numbers. Aryan would like to replace existing numbers with some other numbers. Today he decided to replace all digits of the number (which is greater than or equal to 2 digits) by its squares and print it in reverse order. Write a program to help him to replace numbers accordingly.

input -----> an integer value
output ----> replaced all digits by its squares and revered number

Ex:
	123 ----> 941
	904 ----> 16081

Logic:
		while(n!=0)
		{
			d=n%10;
			print d*d
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        printf("%d",d*d);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d;
        while(n!=0)
        {
            d=n%10;
            System.out.print(d*d);
            n=n/10;
        }
    }
}

python implementation:
----------------------
n=int(input())
while n!=0:
    d=n%10
    print(d*d,end='')
    n=n//10





P072: ITEM ID
~~~~~~~~~~~~~~
A company wishes to bucketize their item id's for better search operations. The bucket for the item ID is chosen on the basis of the maximum value of the digit in the item ID. Writean algorithm to find the bucket to which the item ID will be assigned.

input ----> an integer value
output ---> bucket id

Ex:
	1234 ----> 4
	1982 ----> 9

Logic is same as 'max digit' present in the given number

Logic:
		m=0;
		while(n!=0)
		{
			d=n%10;
			if(m<d)
				m=d;
			n=n/10;
		}
		print m

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int m,n,d;
    scanf("%d",&n);
    m=0;
    while(n!=0)
    {
        d=n%10;
        if(m<d)
            m=d;
        n=n/10;
    }
    printf("%d",m);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=0,d;
        while(n!=0)
        {
            d=n%10;
            if(m<d)
                m=d;
            n=n/10;
        }
        System.out.println(m);
    }
}

python implementation:
----------------------
print(max([int(i) for i in input()]))





P073: COUNTRY VISA CENTRE
~~~~~~~~~~~~~~~~~~~~~~~~~~
The country visa center generates the token number for its applicants from their application ID. the application ID is numberic value. The token number is generated  in a specific form. the even digits in the applicant's ID are replaced by the digit one greater than the even digitand the odd digits in the applicant's ID are replaced by the digit one lesser than the odd digit. The numeric calue thus generated represents the token number of applicant.

Write an algorithm togenerate the token number from the applicant ID.

input -----> application id
output ----> token id

Ex:
	34125 ----> 25034

	34125 ---> reverse first ---> 52143

Logic:
		n=rev(n)
		while(n!=0)
		{
			d=n%10;
			if(d%2==0)
				print d+1
			else
				print d-1
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n,d;
    scanf("%d",&n);
    n=rev(n);
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            printf("%d",d+1);
        else
            printf("%d",d-1);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int d,r=0;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d;
        n=rev(n);
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                System.out.print(d+1);
            else
                System.out.print(d-1);
            n=n/10;
        }
    }
}

python implementation:
----------------------
n=int(input())
n=int(str(n)[::-1])
while n!=0:
    d=n%10
    if d%2==0:
        print(d+1,end='')
    else:
        print(d-1,end='')
    n=n//10





P074: SUPER MARKET PRICING
~~~~~~~~~~~~~~~~~~~~~~~~~~
A super market maintains a pricing format for all its products. A value N is printed on each product. When the scanner reads the value N on the item, the product of all the digits in the value N is the price of the item. the task here is to design the software such that given the code of any item N the product (multiplication) of all the digits of value should be computed (price).

input ------> an integer value
output -----> price

Ex: 
	1234 ---> 1*2*3*4=24
	2512 ---> 2*5*1*2=20

Logic:
		p=1
		while(n!=0)
		{
			d=n%10;
			p=p*d;
			n=n/10;
		}
		print p

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,p=1;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        p=p*d;
        n=n/10;
    }
    printf("%d",p);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d,p=1;
        while(n!=0)
        {
            d=n%10;
            p=p*d;
            n=n/10;
        }
        System.out.println(p);
    }
}

python implementation:
----------------------
n=int(input())
p=1
while n!=0:
    d=n%10
    p=p*d
    n=n//10
print(p)





P075: NUMBER CONTAINER
~~~~~~~~~~~~~~~~~~~~~~
Given two positive numbers N and K. The task is to find the nunber N containers exactly K digit or not. If contains then print True<space>digit_count otherwise False<space>digit_count.

input -----> value of n and k
output ----> True or False followed by digit count

Ex:
	1234, 3 ----> False 4
	123,3 ------> True 3

Logic:
		read 'n' value
		read 'keyc' value
		c=0
		while(n!=0)
		{
			c++;
			n=n/10;
		}
		if(c==keyc)
			print 'True ',c
		else
			print 'False ',c

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,keyc,c=0;
    scanf("%d",&n);
    scanf("%d",&keyc);
    while(n!=0)
    {
        c++;
        n=n/10;
    }
    if(keyc==c)
        printf("True %d",c);
    else
        printf("False %d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),keyc=obj.nextInt(),c=0;
        while(n!=0)
        {
            c++;
            n=n/10;
        }
        if(keyc==c)
            System.out.println("True "+c);
        else
            System.out.println("False "+c);
    }
}

python implementation:
----------------------
n=input()
keyc=int(input())
if len(n)==keyc:
    print('True',len(n))
else:
    print('False',len(n))

Ex:
n = int(input())
n1 = int(input())
c=0
while n !=0:
    c=c+1
    n=n//10
if n1==c:
    print("True",c )
else:
    print("False",c)





P076: CHRISTMAS OFFER
~~~~~~~~~~~~~~~~~~~~~
An e-commerce company plans to give their customers a special discount for the Christmas, they are planning to offer a flat discount. The discount value is calculated as the sum of all prime digits in the total bill amount.

Write an algorithm to find the discount value for the given total bill amount.

input -----> an integer value
output ----> discount

Note: It is same as sum of prime digits present in the given number.

Ex:
	1234 ----> 2+3=5
	135 -----> 3+5=8
	123 -----> 2+3=5

Digits ----------> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
Prime Digits ----> 2, 3, 5, 7

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d==2 or d==3 or d==5 or d==7)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d==2 || d==3 || d==5 || d==7)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d==2 || d==3 || d==5 || d==7)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if i in '2357']))





P077: NIVEN NUMBER
~~~~~~~~~~~~~~~~~~
Write a program to accept a number and check and display whether it is a Niven Number or not.
Niven Number is that a number which is divisible by its sum of digits.

input ----> an integer value
output ---> Yes or No

Ex:
	16 ----> 1+6=7 ----> No
	18 ----> 1+8=9 ----> Yes

Logic:
		read 'n' value
		temp=n
		sum=0;
		while(n=0)
		{
			d=n%10;
			sum=sum+d;
			n=n/10;
		}
		if temp%sum==0 then 'Yes' else 'No'

 C Implementation:
 -----------------
 #include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,temp,sum;
    scanf("%d",&n);
    temp=n;
    sum=0;
    while(n!=0)
    {
        d=n%10;
        sum=sum+d;
        n=n/10;
    }
    if(temp%sum==0)
        printf("Yes");
    else
        printf("No");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),sum,temp,d;
        temp=n;
        sum=0;
        while(n!=0)
        {
            d=n%10;
            sum=sum+d;
            n=n/10;
        }
        System.out.println((temp%sum==0)?"Yes":"No");
    }
}

python implementation:
----------------------
n=int(input())
temp=n
sum=0
while n!=0:
    d=n%10
    sum=sum+d
    n=n//10
print('Yes' if temp%sum==0 else 'No')





P078: Newyear Holiday Discount
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
An e-Commerce company plans to give their customers a discount for the New Year’s holiday. The discount will be calculated on the basis of the bill amount of the order place. The discount amount is the product of the sum of all odd digits and the sum of all even digits of the customers total bill amount.

input --------> an integer representing bill amount
output -------> return discount value

Ex:
	12345 ----> (2+4)*(1+3+5) = 6*9 = 54

Logic:
		se=0;
		so=0;
		while(n!=0)
		{
			d = n%10;
			if(d%2==0)
				se=se+d;
			else
				so=so+d;
			n=n/10;
		}
		print se*so

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,se,so;
    scanf("%d",&n);
    se=0;
    so=0;
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            se=se+d;
        else
            so=so+d;
        n=n/10;
    }
    printf("%d",se*so);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),se=0,so=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                se=se+d;
            else
                so=so+d;
            n=n/10;
        }
        System.out.println(se*so);
    }
}

python implementation:
----------------------
n=int(input())
se=0
so=0
while n!=0:
    d=n%10
    if d%2==0:
        se=se+d
    else:
        so=so+d
    n=n//10
print(se*so)





P079: DIGITAL ROOT
~~~~~~~~~~~~~~~~~~
Write a program to find the digital root of a given number. 
Digital root is the recursive sum of digits in the given number (until single digit is arrived)

input ----> a number from the user
output ---> single digit number

Ex:	
	123 ---> 1+2+3=6
	12345--> 1+2+3+4+5=15=1+5=6
	7234---> 7+2+3+4=16=1+6=7

Logic:
		while(1){
			if(n>=0 and n<=9)
			{
				print n
				break;
			}
			n=sum(n);
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int sum(int n)
{
    int d,s=0;
    while(n!=0)
    {
        d=n%10;
        s=s+d;
        n=n/10;
    }
    return s;
}
int main() {
    int n;
    scanf("%d",&n);
    while(1)
    {
        if(n>=0 && n<=9)
        {
            printf("%d",n);
            break;
        }
        n=sum(n);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int sum(int n)
    {
        int d,s=0;
        while(n!=0)
        {
            d=n%10;
            s=s+d;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        while(true)
        {
            if(n>=0 && n<=9)
            {
                System.out.println(n);
                break;
            }
            n=sum(n);
        }
    }
}

python implementation:
----------------------
def sum(n):
    s=0
    while(n!=0):
        d=n%10
        s=s+d
        n=n//10
    return s

n=int(input())
while True:
    if n>=0 and n<=9:
        print(n)
        break
    n=sum(n)





P080: ABSOLUTE DIFFERENCE
~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find the absolute difference between the original number and its reserved number.

input -----> a number from the user
output ----> absolute difference

Ex:
	421 ----> 421-124 = 297
	123 ----> 123-321 = -198 = 198

Logic:
		read 'n' value 
		print abs(n-rev(n))

		c----> abs(num)
		java-> Math.abs(num)
		py --> abs(num)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int rev(int n)
{
    int r=0,d;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}
int main() {
    int n;
    scanf("%d",&n);
    printf("%d",abs(n-rev(n)));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(Math.abs(n-rev(n)));
    }
}

python implementation:
----------------------
n=int(input())
print(abs(n-int(str(n)[::-1])))

P081: DUCK NUMBER
~~~~~~~~~~~~~~~~~
Program to read a number and check whether it is duck number or not.
Hint: A duck number is a number which has zeros present in it, but no zero present in the begining of the number.

input-------> a number from the user
output------> Yes or No

Ex:
	1234 ----> No
	1203 ----> Yes

Logic:
		flag=0;
		while(n!=0)
		{
			d=n%10;
			if(d==0)
			{
				flag=1;
				break;
			}
			n=n/10;
		}
		if flag==1 then print 'Yes' else 'No'

		Java ----> s.contains("0") ---> true or false
		Py ------> "0" in s ----------> True or False

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,flag=0;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        if(d==0)
        {
            flag=1;
            break;
        }
        n=n/10;
    }
    printf((flag==1)?"Yes":"No");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        System.out.println((s.contains("0"))?"Yes":"No");
    }
}

python implementation:
----------------------
s=input()
print("Yes" if "0" in s else "No")





P082: TEST PAPER SET
~~~~~~~~~~~~~~~~~~~~
In an online exam, the test paper set is categorized by the letters A-Z. The students enrolled in the exam have been assigned a numeric value called application ID. To assign the test set to the student, firstly the sum of all digits in the application ID is calculated. If the sum is within the numeric range 1-26 the corresponding alphanetic set code is assigned to the student, else the sum of the digits are calcualted again and so on unitil the sum falls within the 1-26 range.

input ------> application id as int
output -----> set number

Ex:
	123 ----> 1+2+3=6 ---> F

Logic:
------
		read 'n' value
		while(1)
		{
			if(n>=1 && n<=26){
				print n+64
				break;
			}
			n=sum(n);
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int sum(int n)
{
    int d,s=0;
    while(n!=0)
    {
        d=n%10;
        s=s+d;
        n=n/10;
    }
    return s;
}
int main() {
    int n;
    scanf("%d",&n);
    while(1)
    {
        if(n>=1 && n<=26)
        {
            printf("%c",n+64);
            break;
        }
        n=sum(n);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int sum(int n)
    {
        int s=0,d;
        while(n!=0)
        {
            d=n%10;
            s=s+d;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        while(true)
        {
            if(n>=1 && n<=26)
            {
                System.out.println((char)(n+64));
                break;
            }
            n=sum(n);
        }
    }
}

python implementation:
----------------------
def sum(n):
    s=0
    while n!=0:
        d=n%10
        s=s+d
        n=n//10
    return s

n=int(input())
while True:
    if n>=1 and n<=26:
        print(chr(n+64))
        break
    n=sum(n)






P083: TOKEN NUMBER
~~~~~~~~~~~~~~~~~~
Write an algorithm to generate the token number from the application ID by doing this modifications.

R1. If the digit is even add 1 to it.
R2. If the digit is odd sub 1 from it.


input -----> a number from the user
output ----> token number

Ex:
	34125 ----> 25034

	34125 ---> reverse first ---> 52143

Logic:
		n=rev(n)
		while(n!=0)
		{
			d=n%10;
			if(d%2==0)
				print d+1
			else
				print d-1
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n,d;
    scanf("%d",&n);
    n=rev(n);
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            printf("%d",d+1);
        else
            printf("%d",d-1);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int d,r=0;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d;
        n=rev(n);
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                System.out.print(d+1);
            else
                System.out.print(d-1);
            n=n/10;
        }
    }
}

python implementation:
----------------------
n=int(input())
n=int(str(n)[::-1])
while n!=0:
    d=n%10
    if d%2==0:
        print(d+1,end='')
    else:
        print(d-1,end='')
    n=n//10





P084: PLAYER'S SCORE
~~~~~~~~~~~~~~~~~~~~
In a game, organizers has given a number to the player. The player has to find out the absolute differnece between the number and the reverse of the number. The difference between two numbers is the player's score. The number given to the player and the player's score can be a negative or positive number.

Write an algorithm to find the player's score.

input ------> an integer 
output -----> player's score

formula: n-rev(n)

Ex:
	421 ----> 421-124 = 297
	123 ----> 123-321 = -198 = 198

Logic:
		read 'n' value 
		print abs(n-rev(n))

		c----> abs(num)
		java-> Math.abs(num)
		py --> abs(num)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int rev(int n)
{
    int r=0,d;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}
int main() {
    int n;
    scanf("%d",&n);
    printf("%d",abs(n-rev(n)));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(Math.abs(n-rev(n)));
    }
}

python implementation:
----------------------
n=int(input())
print(abs(n-int(str(n)[::-1])))






P085: GLOBAL ADD
~~~~~~~~~~~~~~~~
The media compnay "GlobalAdd" has received a batch of advertisements from different product brands. The batch of advertisements is a numeric value where each digit represnets the number of advertisements the media company has received from different product brands. Since the company banners permit only even numbers of advertisements to be displayed, the media company needs to know the totoal number of advertisements it will be able to display from the given batch.

Write an algorithm to calculate the total number of advertisements that will be displayed from the batch.

input -----> an integer
output ----> count of advertisements

Ex:
	1234 ----> 2

Logic:
		count=0;
		while(n!=0)
		{
			d=n%10;
			if(d%2==0)
				count++;
			n=n/10;
		}
		print count;

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,c=0,d;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            c++;
        n=n/10;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int c=0,n=obj.nextInt(),d;
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                c++;
            n=n/10;
        }
        System.out.println(c);
    }
}

python implementation:
----------------------
n=int(input())
c=0
while n!=0:
    d=n%10
    if d%2==0:
        c=c+1
    n=n//10
print(c)






P086: HAPPY NUMBER
~~~~~~~~~~~~~~~~~~
The happy number can be defined as a number which will yield 1 when it is replaced by the sum of the square of its digits repeatedly. If this process results in an endless cycle of numbers containing single digit, then the number is called an unhappy number.

Write a program that accepts a number and determines whether the number is a happy number or not. Return true if so, false otherwise.

input -----> a number from the user
output ----> true or false

Ex:
	31=>9+1=>10=>1+0=>1 ---> true
	16=>1+36=37........ ---> false

Logic:
		read 'n' value
		while(1)
		{
			if(n>=0 and n<=9)
			{
				if(n==1)
				{
					flag=1;
					break;
				}
				else
				{
					flag=0;
					break;
				}
			}
		n=sumofsqaures(n);
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int sum(int n)
{
    int s=0,d;
    while(n!=0)
    {
        d=n%10;
        s=s+(d*d);
        n=n/10;
    }
    return s;
}

int main() {
    int n;
    scanf("%d",&n);
    while(1)
    {
        if(n>=0 && n<=9)
        {
            if(n==1)
            {
                printf("true");
                break;
            }
            else
            {
                printf("false");
                break;
            }
        }
        n=sum(n);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int sum(int n)
    {
        int s=0,d;
        while(n!=0)
        {
            d=n%10;
            s=s+d*d;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        while(true)
        {
            if(n>=0 && n<=9)
            {
                if(n==1)
                {
                    System.out.println(true);
                    break;
                }
                else
                {
                    System.out.println(false);
                    break;
                }
            }
            n=sum(n);
        }
    }
}

python implementation:
----------------------
def sum(n):
    s=0
    while n!=0:
        d=n%10
        s=s+d*d
        n=n//10
    return s

n=int(input())
while True:
    if n>=0 and n<=9:
        if n==1:
            print("true")
            break
        else:
            print("false")
            break
    n=sum(n)






P087: MATHTIP
~~~~~~~~~~~~~
The online math course provider 'MathAtTip' has designed a course for children called Learning Number Recognition and Coutning. The assessment part of the course has a question where the student is given a number and a digit. The student needs to find out the total count of the digits present in the number excluding the given digit.

input ------> two space seperated int values
output -----> count of total digits excluding k

Ex:
	12345, 3 ---> 4
	12212, 2 ---> 2

Logic:
		while(n!=0)
		{
			d=n%10;
			if(d!=key)
				count++;
			n=n/10;
		}
		print count

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,key,c=0;
    scanf("%d",&n);
    scanf("%d",&key);
    while(n!=0)
    {
        d=n%10;
        if(d!=key)
            c++;
        n=n/10;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),key=obj.nextInt(),d,c=0;
        while(n!=0)
        {
            d=n%10;
            if(d!=key)
                c++;
            n=n/10;
        }
        System.out.println(c);
    }
}

python implementation:
----------------------
n=int(input())
key=int(input())
c=0
while n!=0:
    d=n%10
    if d!=key:
        c=c+1
    n=n//10
print(c)





P088: DATA ENCODE
~~~~~~~~~~~~~~~~~
A company wishes to encode its data. The data is in the form of a number. They wish to encode the data with respect to a specific digit. They wish to count the number of times the specific digit reoccurs in the given data so that they can encode the data accordingly. Write an algorithm to find the count of the specific digit in the given data.

input ---------> data and digit
output --------> count of specific digit

Ex:
	1234, 1 ----> 1
	1234, 6 ----> 0

Logic:
		c=0;
		while(n!=0)
		{
			d=n%10;
			if(d==dd)
				c++;
			n=n/10;
		}
		print c;

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,dd,c;
    scanf("%d %d",&n,&dd);
    c=0;
    while(n!=0)
    {
        d=n%10;
        if(d==dd)
            c++;
        n=n/10;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),dd=obj.nextInt(),d,c=0;
        while(n!=0)
        {
            d=n%10;
            if(d==dd)
                c++;
            n=n/10;
        }
        System.out.println(c);
    }
}

python implementation:
----------------------
n=input()
dd=input()
print(n.count(dd))

P089: INCREMENT DIGITS BY ONE UNIT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to increment all its digits by one unit

input -----> an integer value
output ----> updated number

Ex:

	2345 -----> 3456
	directly it is not possible

	1. reverse the data first
	2. then extract digits and add 1

	2345 ---> 5432 ----> 3456

Logic:
		n=rev(n)
		while(n!=0)
		{
			d=n%10;
			print d+1
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n,d;
    scanf("%d",&n);
    n=rev(n);
    while(n!=0)
    {
        d=n%10;
        printf("%d",d+1);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d;
        n=rev(n);
        while(n!=0)
        {
            d=n%10;
            System.out.print(d+1);
            n=n/10;
        }
    }
}


python implementation:
----------------------
n=input()
n=int(n[::-1])
while n!=0:
    d=n%10
    print(d+1,end='')
    n=n//10
    




P090: DECREMENT DIGITS BY ONE UNIT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to decrement all its digits by one unit

input -----> an integer value
output ----> updated number


Ex:

	2345 -----> 1234
	directly it is not possible

	1. reverse the data first
	2. then extract digits and subtract 1

	2345 ---> 5432 ----> 1234

Logic:
		n=rev(n)
		while(n!=0)
		{
			d=n%10;
			print d-1
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n,d;
    scanf("%d",&n);
    n=rev(n);
    while(n!=0)
    {
        d=n%10;
        printf("%d",d-1);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d;
        n=rev(n);
        while(n!=0)
        {
            d=n%10;
            System.out.print(d-1);
            n=n/10;
        }
    }
}


python implementation:
----------------------
n=input()
n=int(n[::-1])
while n!=0:
    d=n%10
    print(d-1,end='')
    n=n//10
    





P091: PRINT NUMBERS IN WORDS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the given number in words, for example if given number is 123 then excepted output is 'One Two Three'.

input ----> an integer value
output ---> print number in words

Ex:
	4512 ----> Four Five One Two

	4512 --> 2154, Four Five One Two

Logic:
		n=rev(n)
		while(n!=0)
		{
			d=n%10;
			if(d==0)
				print "Zero"
			else if(d==1)
				print "One"
			.
			.
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}
int main() {
    int n,d;
    scanf("%d",&n);
    n=rev(n);
    while(n!=0)
    {
        d=n%10;
        if(d==0)
            printf("Zero ");
        else if(d==1)
            printf("One ");
        else if(d==2)
            printf("Two ");
        else if(d==3)
            printf("Three ");
        else if(d==4)
            printf("Four ");
        else if(d==5)
            printf("Five ");
        else if(d==6)
            printf("Six ");
        else if(d==7)
            printf("Seven ");
        else if(d==8)
            printf("Eight ");
        else if(d==9)
            printf("Nine ");
        else
        {}
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int d,n = obj.nextInt();
        n=rev(n);
        while(n!=0)
        {
            d=n%10;
            if(d==0)
                System.out.print("Zero ");
            else if(d==1)
                System.out.print("One ");
            else if(d==2)
                System.out.print("Two ");
            else if(d==3)
                System.out.print("Three ");
            else if(d==4)
                System.out.print("Four ");
            else if(d==5)
                System.out.print("Five ");
            else if(d==6)
                System.out.print("Six ");
            else if(d==7)
                System.out.print("Seven ");
            else if(d==8)
                System.out.print("Eight ");
            else if(d==9)
                System.out.print("Nine ");
            else{}
            n=n/10;
        }
    }
}

python implementation:
----------------------
n=input()
n=int(n[::-1])
L=["Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"]
while n!=0:
    d=n%10
    print(L[d],end=' ')
    n=n//10

n=123

d=1 , L[1] = One
d=2 , L[2] = Two
d=3 , L[3] = Three

One Two Three





P092: ARMSTRONG NUMBER OR NOT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is armstrong number or not, a number is said to armstrong if it is equal to the sum of cubes of its digits.

input ----> an integer value
output ---> true or false

n=151 ----> 1^3 + 5^3 + 1^3 = 1+125+1 = 127 --> false
n=153 ----> 1^3 + 5^3 + 3^3 = 1+125+27=153 ---> true

Logic:
		read 'n' value
		temp=n
		s=0
		while(n!=0)
		{
			d=n%10;
			s=s+d*d*d;
			n=n/10;
		}
		if temp==s then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,temp,s;
    scanf("%d",&n);
    temp=n;
    s=0;
    while(n!=0)
    {
        d=n%10;
        s=s+(d*d*d);
        n=n/10;
    }
    printf((s==temp)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,temp=n,d;
        while(n!=0)
        {
            d=n%10;
            s=s+(d*d*d);
            n=n/10;
        }
        System.out.println(temp==s);
    }
}

python implementation:
----------------------
n=int(input())
temp=n
s=0
while n!=0:
    d=n%10
    s=s+(d*d*d)
    n=n//10
print('true' if s==temp else 'false')







P093: SUM OF ENTERED NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read numbers till the user wants and at the end print sum of numbers entered by the user, stop reading data if user enters '0'.

input -----> read numbers until user enter '0'
output ----> sum of entered numbers

Ex:
	1, 2, 3, 4, 0 ---> 1+2+3+4 = 10

Logic:
		s=0;
		do
		{
			read 'n' value
			s=s+n;
		}while(n!=0);
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s=0;
    do
    {
        scanf("%d",&n);
        s=s+n;
    }while(n!=0);
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n,s=0;
        do
        {
            n=obj.nextInt();
            s=s+n;
        }while(n!=0);
        System.out.println(s);
    }
}

python implementation:
----------------------
s=0
while True:
    n=int(input())
    s=s+n
    if n==0:
        break
print(s)







P094: COUNT +VE AND -VE VALUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read numbers until user enters '0', and count number of +ve and -ve numbers and display.

input -----> read numbers until user enter '0'
output ----> count of +ve and -ve numbers

Ex:
	1,2,-3,-9,3,0 ----> 3, 2

Logic:
		c1=0;
		c2=0;
		do
		{
			read 'n' value
			if(n>0)
				c1++;
			if(n<0)
				c2++;
		}while(n!=0);
		print c1
		print c2

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int c1=0,c2=0,n;
    do
    {
        scanf("%d",&n);
        if(n>0)
            c1++;
        if(n<0)
            c2++;
    }while(n!=0);
    printf("%d\n%d",c1,c2);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n,c1=0,c2=0;
        do
        {
            n=obj.nextInt();
            if(n>0)
                c1++;
            if(n<0)
                c2++;
        }while(n!=0);
        System.out.println(c1);
        System.out.println(c2);
    }
}

python implementation:
----------------------
c1=0
c2=0
while True:
    n=int(input())
    if n>0:
        c1=c1+1
    if n<0:
        c2=c2+1
    if n==0:
        break
print(c1)
print(c2)






P095: AMOUNT PAID
~~~~~~~~~~~~~~~~~
Ananya purchased 'n' pencils and 'm' erasers at the cost of Rs. 7 and Rs.5 respectively. Write a program to calculate & display the total amount paid by ananya.

input -----> 'n' pencils and 'm' erasers
output ----> total amount paid

Ex:
	n=3, n=2
	cost = 3*7 + 2*5 = 21 + 10 = 31

Logic:
		print n*7 + m*5

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,m;
    scanf("%d %d",&n,&m);
    printf("%d",n*7+m*5);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=obj.nextInt();
        System.out.println(n*7+m*5);
    }
}

python implemetation:
---------------------
n=int(input())
m=int(input())
print(n*7+m*5)






P096: SUM OF FIRST,LAST,SECOND,SECOND LAST AND SO ON
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of first, last digit and second,last second and so on.

input -----> an integer value
output ----> sum of first, last digits and second, last second digits and so on

Ex:
	1234 ---> 1+4=5+2+3=10
	123 ----> 1+3+2+2=8

Logic:
		read 'n1' value from the user
		n2=rev(n1);

		n1=1234
		n2=4321

		count=length of number
		count=4
		s=0;
		i=0;
		while(i<count/2)
		{
			s=s+n1%10+n2%10;
			n1=n1/10;
			n2=n2/10;
			i++;
		}
		print s

Another Logic:
--------------
		
		read a number in the form of string
		str

		low=0;
		high=strlen(str)-1;
		while(low<=high)
		{
			s=s+(int)str[low]+(int)str[high];
			low++;
			high--;
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int low,high,sum;
    char s[100];
    scanf("%s",s);
    low=0;
    high=strlen(s)-1;
    sum=0;
    while(low<=high)
    {
        sum=sum+(s[low]-48)+(s[high]-48);
        low++;
        high--;
    }
    printf("%d",sum);
    return 0;
}

Note:
-----
'0'-->48
'1'-->49

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        int sum=0,low=0,high=s.length()-1;
        while(low<=high)
        {
            sum=sum+(s.charAt(low)-48)+(s.charAt(high)-48);
            low++;
            high--;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
s=input()
sum=0
low = 0
high = len(s)-1
while low<=high:
    sum=sum+int(s[low])+int(s[high])
    low=low+1
    high=high-1
print(sum)

P097: AVERAGE OF DIGITS
~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find average of digits.

input -----> an integer value
output ----> average value round off to integer

Ex:
	1234=10/4=2

Logic:
		print sum(n)/count(n)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int count(int n)
{
    int c=0;
    while(n!=0)
    {
        c++;
        n=n/10;
    }
    return c;
}
int sum(int n)
{
    int s=0;
    while(n!=0)
    {
        s=s+n%10;
        n=n/10;
    }
    return s;
}
int main() {
    int n;
    scanf("%d",&n);
    printf("%d",sum(n)/count(n));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int count(int n){
        int c=0;
        while(n!=0)
        {
            c++;
            n=n/10;
        }
        return c;
    }
    static int sum(int n)
    {
        int s=0;
        while(n!=0)
        {
            s=s+n%10;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(sum(n)/count(n));
    }
}

python implementation:
----------------------
L = [int(i) for i in input()]
print(sum(L)//len(L))






P098: EVEN LENGTH OR ODD LENGTH NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is even length number or odd length number, if it is even length number return 'true' else return 'false'.

input -----> an integer value
output ----> true or false

Ex:
	123 ----> false
	1234 ---> true

Logic:
		read a number
		if(count(n)%2==0)
			print true
		else
			print false

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int count(int n)
{
    int c=0;
    while(n!=0)
    {
        c++;
        n=n/10;
    }
    return c;
}
int main() {
    int n;
    scanf("%d",&n);
    printf((count(n)%2==0)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int count(int n){
        int c=0;
        while(n!=0)
        {
            c++;
            n=n/10;
        }
        return c;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(count(n)%2==0);
    }
}

python implementation:
----------------------
L = [int(i) for i in input()]
print("true" if len(L)%2==0 else "false")

P099: SUM OF MIDDLE DIGIT(S)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of middle digit number(s).

input ----> an integer value
output ---> sum of middle digit

Ex:
	123 ----> 2+2=4
	1234 ---> 2+3=5

"1234"
 0123

4/2=2-1,2

"123"
 012

3/2=1= 1,1
Logic:
		read number in the form of string

		if(strlen(s)%2==0)
		{
			print (s[strlen(s)/2-1]-48)+(s[strlen(s)/2]-48)
		}
		else
		{
			print (s[strlen(s)/2]-48)+(s[strlen(s)/2]-48)
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%s",s);
    if(strlen(s)%2==0)
    {
        printf("%d",(s[strlen(s)/2-1]-48)+(s[strlen(s)/2]-48));
    }
    else
    {
        printf("%d",(s[strlen(s)/2]-48)+(s[strlen(s)/2]-48));
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        if(s.length()%2==0)
        {
            System.out.println((s.charAt(s.length()/2-1)-48)+(s.charAt(s.length()/2)-48));
        }
        else
        {
            System.out.println((s.charAt(s.length()/2)-48)+(s.charAt(s.length()/2)-48));
        }
    }
}

python implementation:
----------------------
s=input()
if len(s)%2==0:
    print(int(s[len(s)//2-1])+int(s[len(s)//2]))
else:
    print(int(s[len(s)//2])+int(s[len(s)//2]))






P100: MULTIPLICATION OF MIDDLE DIGIT(S)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find multiplication of middle digit number(s).

input ----> an integer value
output ---> sum of middle digit

Ex:
	123 ----> 2*2=4
	1234 ---> 2*3=6

"1234"
 0123

4/2=2-1,2

"123"
 012

3/2=1= 1,1
Logic:
		read number in the form of string

		if(strlen(s)%2==0)
		{
			print (s[strlen(s)/2-1]-48)*(s[strlen(s)/2]-48)
		}
		else
		{
			print (s[strlen(s)/2]-48)*(s[strlen(s)/2]-48)
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%s",s);
    if(strlen(s)%2==0)
    {
        printf("%d",(s[strlen(s)/2-1]-48)*(s[strlen(s)/2]-48));
    }
    else
    {
        printf("%d",(s[strlen(s)/2]-48)*(s[strlen(s)/2]-48));
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        if(s.length()%2==0)
        {
            System.out.println((s.charAt(s.length()/2-1)-48)*(s.charAt(s.length()/2)-48));
        }
        else
        {
            System.out.println((s.charAt(s.length()/2)-48)*(s.charAt(s.length()/2)-48));
        }
    }
}

python implementation:
----------------------
s=input()
if len(s)%2==0:
    print(int(s[len(s)//2-1])*int(s[len(s)//2]))
else:
    print(int(s[len(s)//2])*int(s[len(s)//2]))



C/C++/Java:
-----------
for(Intialization; Condition; Update)
{
	---------------
	---------------
	---------------
}

Python:
-------
we dn't have for loop in python, but we can overcome this by using two concepts

1) for each loop
2) range()

for i in seq:
    -------------
    -------------

seq ----> range, str, list, tuple, etc

range(a)   ----> 0 to a-1 [excluding a value]
range(a,b)   --> a to b-1 [including a value and excluding b value]
range(a,b,c) --> a to b-1 with step c[including a value and excluding b value]

Note: in python always sencond args is exclusive

range(5) ---------> 0, 1, 2, 3, 4
range(0,5) -------> 0, 1, 2, 3, 4
range(3,5) -------> 3, 4
range(0,5,1) -----> 0, 1, 2, 3, 4
range(0,5,2) -----> 0, 2, 4
range(0,5,3) -----> 0, 3 





P0101: N NATURAL NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print first 'n' natural numbers.

input ----> an integer value
output ---> 'n' natural numbers

Ex:
	5 ----> 1, 2, 3, 4, 5

Logic:
		for(i=1;i<=n;i++) ---> 1,2,3,4,5,6,...n
		range(1,n+1) ----------> 1,2,3,4,5,6,...n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
        printf("%d ",i);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n=obj.nextInt();
        for(i=1;i<=n;i++)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1):
    print(i,end=' ')





P0102: N EVEN NUMBERS
~~~~~~~~~~~~~~~~~~~~~
Implement a program to print first 'n' even numbers.

input ----> an integer value
output ---> 'n' even numbers

Ex:
	5 ----> 0, 2, 4

Logic:
		for(i=0;i<=n;i=i+2) ---> 0,2,4,6,8,10,...n
		range(0,n+1,2) --------> 0,2,4,6,8,10,...n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=0;i<=n;i=i+2)
        printf("%d ",i);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n=obj.nextInt();
        for(i=0;i<=n;i+=2)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
for i in range(0,n+1,2):
    print(i,end=' ')






P0103: N ODD NUMBERS
~~~~~~~~~~~~~~~~~~~~
Implement a program to print first 'n' odd numbers.

input ----> an integer value
output ---> 'n' odd numbers

Ex:
	5 ----> 1, 3, 5

Logic:
		for(i=1;i<=n;i=i+2) ---> 1,3,5,7,9,11,...n
		range(1,n+1,2) --------> 1,3,5,7,9,11,...n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=1;i<=n;i=i+2)
        printf("%d ",i);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n=obj.nextInt();
        for(i=1;i<=n;i+=2)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1,2):
    print(i,end=' ')





P0104: N NATURAL NUMBERS IN REVERSE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print first 'n' natural numbers in reverse order.

input ----> an integer value
output ---> 'n' natural numbers in reverse order

Ex:
	5 ----> 5, 4, 3, 2, 1, 0

Logic:
		for(i=n;i>=0;i--) ---> n,n-1,n-2,....3,2,1,0
		range(n,0-1,-1) ----------> n,n-1,n-2,....3,2,1,0

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=n;i>=0;i--)
        printf("%d ",i);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n=obj.nextInt();
        for(i=n;i>=0;i--)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
for i in range(n,0-1,-1):
    print(i,end=' ')





P105: NUMBER FOLLOWED BY ITS SQUARE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 'number' followed by its 'square' upto n

input ----> an integer value
output ---> number followed by square

Ex:
   n=3
   1 1 2 4 3 9
   n=5
   1 1 2 4 3 6 4 16 5 25

Logic:
		for(i=1;i<=n;i++)
		{
			print i,i*i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        printf("%d %d ",i,i*i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        for(i=1;i<=n;i++)
        {
            System.out.print(i+" "+(i*i)+" ");
        }
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1):
    print(i,i*i,end=' ')





P106: NUMBER FOLLOWED BY ITS CUBE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 'number' followed by its 'cube' upto n

input ----> an integer value
output ---> number followed by cube

Ex:
   n=3
   1 1 2 8 3 27
   n=5
   1 1 2 8 3 27 4 64 5 125

Logic:
		for(i=1;i<=n;i++)
		{
			print i,i*i*i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        printf("%d %d ",i,i*i*i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        for(i=1;i<=n;i++)
        {
            System.out.print(i+" "+(i*i*i)+" ");
        }
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1):
    print(i,i*i*i,end=' ')





P107: PRINT THE SEQUENCE 1,4,7,10,13,.....
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 1,4,7,10,13,.....

input ----> an integer value
output ---> sequence upto n

Ex:
	n=4 ---> 1 4 7 10 
	n=5 ---> 1 4 7 10 13

Logic:
		for(i=1;i<=n;i++)
		{
			print i+3
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,j;
    scanf("%d",&n);
    j=1;
    for(i=1;i<=n;i++)
    {
        printf("%d ",j);
        j=j+3;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,j;
        j=1;
        for(i=1;i<=n;i++)
        {
            System.out.print(j+" ");
            j=j+3;
        }
    }
}

python implementation:
----------------------
n=int(input())
j=1
for i in range(1,n+1):
    print(j,end=' ')
    j=j+3

P108: PRINT THE SEQUENCE 1,5,9,13,17,.....
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 1,5,9,13,17,.....

input ----> an integer value
output ---> sequence upto n

Ex:
	n=4 ---> 1 5 9 13 
	n=5 ---> 1 5 9 13 17

Logic:
		j=1
		for(i=1;i<=n;i++)
		{
			print j+4
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,j;
    scanf("%d",&n);
    j=1;
    for(i=1;i<=n;i++)
    {
        printf("%d ",j);
        j=j+4;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,j;
        j=1;
        for(i=1;i<=n;i++)
        {
            System.out.print(j+" ");
            j=j+4;
        }
    }
}

python implementation:
----------------------
n=int(input())
j=1
for i in range(1,n+1):
    print(j,end=' ')
    j=j+4




P109: PRINT THE SEQUENCE 10,20,30,40,.....
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 10,20,30,40,.....

input ----> an integer value
output ---> sequence upto n

Ex:
	n=4 ---> 10 20 30 40
	n=5 ---> 10 20 30 40 50

Logic:
		j=10
		for(i=1;i<=n;i++)
		{
			print j+10
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,j;
    scanf("%d",&n);
    j=10;
    for(i=1;i<=n;i++)
    {
        printf("%d ",j);
        j=j+10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,j;
        j=10;
        for(i=1;i<=n;i++)
        {
            System.out.print(j+" ");
            j=j+10;
        }
    }
}

python implementation:
----------------------
n=int(input())
j=10
for i in range(1,n+1):
    print(j,end=' ')
    j=j+10

P110: PRINT THE SEQUENCE 7, 14, 21, 28,....
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 7, 14, 21, 28,.....

input ----> an integer value
output ---> sequence upto n

Ex:
	n=4 ---> 7 14 21 28
	n=5 ---> 7 14 21 28 35

Logic:
		j=7
		for(i=1;i<=n;i++)
		{
			print j+7
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,j;
    scanf("%d",&n);
    j=7;
    for(i=1;i<=n;i++)
    {
        printf("%d ",j);
        j=j+7;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,j;
        j=7;
        for(i=1;i<=n;i++)
        {
            System.out.print(j+" ");
            j=j+7;
        }
    }
}

python implementation:
----------------------
n=int(input())
j=7
for i in range(1,n+1):
    print(j,end=' ')
    j=j+7





P111: SUM OF 'N' NATURAL NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n natural numbers.

input -----> an integer value 
output ----> sum of natural numbers

Ex:
	n=5 ---> 0+1+2+3+4+5=15
	n=3 ---> 0+1+2+3=6

Logic:
		sum=0;
		for(i=0;i<=n;i++)
		{
			sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,sum=0;
    scanf("%d",&n);
    for(i=0;i<=n;i++)
    {
        sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),sum=0,i;
        for(i=0;i<=n;i++)
        {
            sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(0,n+1):
    sum=sum+i
print(sum)






P112: SUM OF 'N' EVEN NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n even numbers.

input -----> an integer value 
output ----> sum of even numbers

Ex:
	n=5 ---> 0+2+4=6
	n=3 ---> 0+2=2

Logic:
		sum=0;
		for(i=0;i<=n;i=i+2)
		{
			sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,sum=0,i;
    scanf("%d",&n);
    for(i=0;i<=n;i=i+2)
    {
        sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum=0;
        for(i=0;i<=n;i=i+2)
        {
            sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(0,n+1,2):
    sum=sum+i
print(sum)




P113: SUM OF 'N' ODD NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n odd numbers.

input -----> an integer value 
output ----> sum of odd numbers

Ex:
	n=5 ---> 1+3+5=9
	n=3 ---> 1+3=4

Logic:
		sum=0;
		for(i=1;i<=n;i=i+2)
		{
			sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,sum=0,i;
    scanf("%d",&n);
    for(i=1;i<=n;i=i+2)
    {
        sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum=0;
        for(i=1;i<=n;i=i+2)
        {
            sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(1,n+1,2):
    sum=sum+i
print(sum)




P114: SUM OF NUMBERS DIVISIBLE BY 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n numbers which are divisible by 3.

input -----> an integer value 
output ----> sum of numbers divisible by 3

Ex:
	n=10 ---> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ---> 3+6+9=18

Logic:
		sum=0
		for(i=0;i<=n;i++)
		{
			if(i%3==0)
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,sum=0;
    scanf("%d",&n);
    for(i=0;i<=n;i++)
    {
        if(i%3==0)
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum=0;
        for(i=0;i<=n;i++)
        {
            if(i%3==0)
                sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(0,n+1):
    if i%3==0:
        sum=sum+i
print(sum)





P115: SUM OF NUMBERS DIVISIBLE BY 5
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n numbers which are divisible by 5.

input -----> an integer value 
output ----> sum of numbers divisible by 5

Ex:
	n=10 ---> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ---> 0+5+10=15

Logic:
		sum=0
		for(i=0;i<=n;i++)
		{
			if(i%5==0)
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,sum=0;
    scanf("%d",&n);
    for(i=0;i<=n;i++)
    {
        if(i%5==0)
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum=0;
        for(i=0;i<=n;i++)
        {
            if(i%5==0)
                sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(0,n+1):
    if i%5==0:
        sum=sum+i
print(sum)





P116: SUM OF NUMBERS DIVISIBLE BY BOTH 2 AND 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n numbers which are divisible by 2 and 3.

input -----> an integer value 
output ----> sum of numbers divisible by 2 and 3

Ex:
	n=15 ---> 6+12=18

Logic:
		sum=0
		for(i=0;i<=n;i++)
		{
			if(i%2==0 && i%3==0)
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,sum=0;
    scanf("%d",&n);
    for(i=0;i<=n;i++)
    {
        if(i%2==0 && i%3==0)
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum;
        sum=0;
        for(i=0;i<=n;i++)
        {
            if(i%2==0 && i%3==0)
                sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(0,n+1):
    if i%2==0 and i%3==0:
        sum=sum+i
print(sum)





P117: PRINT ALL THE EVEN NUMBERS BETWEEN THE INTERVALS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print all even numbers between n1 and n2

input -----> two integer values n1 and n2
output ----> list of integers

Ex:
	10, 20 ----> 10, 12, 14, 16, 18, 20

Logic:
		for(i=n1;i<=n2;i++)
		{
			if(i%2==0)
				print i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n1,n2;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(i%2==0)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i;
        for(i=n1;i<=n2;i++)
        {
            if(i%2==0)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if i%2==0:
        print(i,end=' ')





P118: PRINT ALL THE ODD NUMBERS BETWEEN THE INTERVALS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print all odd numbers between n1 and n2

input -----> two integer values n1 and n2
output ----> list of integers

Ex:
	10, 20 ----> 11, 13, 15, 17, 19

Logic:
		for(i=n1;i<=n2;i++)
		{
			if(i%2!=0)
				print i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n1,n2;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(i%2!=0)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i;
        for(i=n1;i<=n2;i++)
        {
            if(i%2!=0)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if i%2!=0:
        print(i,end=' ')





P119: PRINT ALL THE FACTORS OF THE GIVEN NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print all factors of the given number.

input -----> an integer value
output ----> list of values

Ex:
	5 ----> 1, 5
	6 ----> 1, 2, 3, 6
	10 ---> 1, 2, 5, 10

Logic:
		for(i=1;i<=n;i++)
		{
			if(n%i==0)
				print i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n=obj.nextInt();
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1):
    if n%i==0:
        print(i,end=' ')





P120: PRIME NUMBER OR NOT
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is prime or not.

input -----> an integer value
output ----> true or false

Ex:
	5 -----> true
	6 -----> false
	7 -----> true

Logic:
		factors=0;
		for(i=1;i<=n;i++)
		{
			if(n%i==0)
				factors++;
		}
		if factors==2 then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,f;
    scanf("%d",&n);
    f=0;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    printf((f==2)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,f=0;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        System.out.println(f==2);
    }
}

python implementation:
----------------------
n=int(input())
f=0
for i in range(1,n+1):
    if n%i==0:
        f=f+1
print('true' if f==2 else 'false')

P121: FACTORIAL OF THE NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find factorial of the given number.

input ------> an integer value from the user
output -----> factorial value

Ex:
	5! -----> 5x4x3x2x1=120

Logic:
		factorial = 1
		for(i=1;i<=n;i++)
		{
			factorial = factorial * i;
		}
		print factorial

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,f;
    scanf("%d",&n);
    f=1;
    for(i=1;i<=n;i++)
        f=f*i;
    printf("%d",f);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,f=1;
        for(i=1;i<=n;i++)
            f=f*i;
        System.out.println(f);
    }
}

python implementation:
----------------------
import math
print(math.factorial(int(input())))





P122: FIBONACCI SEQUENCE
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to generate fibonacci sequence upto given number

input ------> an integer value
output -----> fib seq upto n

Ex:
	0 1 1 2 3 5 8 .....
	n=1 ---> 0
	n=2 ---> 0 1 
	n=3 ---> 0 1 1
	n=4 ---> 0 1 1 2

Logic:
	
		a=-1
		b=1
		for(i=1;i<=n;i++){
			c=a+b;
			a=b;
			b=c;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c,i,n;
    scanf("%d",&n);
    a=-1;
    b=1;
    for(i=1;i<=n;i++)
    {
        c=a+b;
        printf("%d ",c);
        a=b;
        b=c;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=-1,b=1,c,n=obj.nextInt(),i;
        for(i=1;i<=n;i++)
        {
            c=a+b;
            System.out.print(c+" ");
            a=b;
            b=c;
        }
    }
}

python implementation:
----------------------
a=-1
b=1
n=int(input())
for i in range(1,n+1):
    c=a+b
    print(c,end=' ')
    a=b
    b=c






P123: TRIBONACCI SEQUENCE
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to generate tribanocci sequence upto given number

input ------> an integer value
output -----> trib seq upto n

Ex:
	0 1 2 3 6 11 20 .....

Logic:
		a=-1
		b=0
		c=1
		for(i=1;i<=n;i++)
		{
			d=a+b+c;
			print d
			a=b;
			b=c;
			c=d;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c,d,i,n;
    scanf("%d",&n);
    a=-1;
    b=0;
    c=1;
    for(i=1;i<=n;i++)
    {
        d=a+b+c;
        printf("%d ",d);
        a=b;
        b=c;
        c=d;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=-1,b=0,c=1,d,n=obj.nextInt(),i;
        for(i=1;i<=n;i++)
        {
            d=a+b+c;
            System.out.print(d+" ");
            a=b;
            b=c;
            c=d;
        }
    }
}

python implementation:
----------------------
a=-1
b=0
c=1
n=int(input())
for i in range(1,n+1):
    d=a+b+c
    print(d,end=' ')
    a=b
    b=c
    c=d





P124: STRONG NUMBER OR NOT
~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is strong number or not.

input ------> an integer value
output -----> true or false

Ex:
	145=1!+4!+5!=1+24+120=145 --> yes
	125=1!+2!+5!=1+2+120=123 ---> no

Logic:
		temp=n;
		while(n!=0)
		{
			d=n%10;
			sum=sum+fact(d);
			n=n/10;
		}
		if temp==sum then 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int fact(int n)
{
    int f=1,i;
    for(i=1;i<=n;i++)
        f=f*i;
    return f;
}

int main() {
    int n,temp,d,s=0;
    scanf("%d",&n);
    temp=n;
    while(n!=0)
    {
        d=n%10;
        s=s+fact(d);
        n=n/10;
    }
    printf((s==temp)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int fact(int n)
    {
        int f=1,i;
        for(i=1;i<=n;i++)
            f=f*i;
        return f;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d,s=0,temp;
        temp=n;
        while(n!=0)
        {
            d=n%10;
            s=s+fact(d);
            n=n/10;
        }
        System.out.println(s==temp);
    }
}

python implementation:
----------------------
import math
n=int(input())
temp=n
s=0
while n!=0:
    d=n%10
    s=s+math.factorial(d)
    n=n//10
print('true' if s==temp else 'false')






P125: LIST OF PRIME NUMBER BETWEEN THE GIVEN INTERVALS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to generate list of prime numbers between two intervals.

input -----> two integer values
output ----> list of prime numbers

Ex:
---
	n1=10 and n2=20 ----> 11, 13, 17, 19

Logic:
------
		for(i=n1;i<=n2;i++)
		{
			if(isprime(i)){
				print i
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int isprime(int n)
{
    int i,f=0;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    return f==2;
}

int main() {
    int n1,n2,i;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(isprime(i))
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static boolean isprime(int n)
    {
        int i,f=0;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        return f==2;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i;
        for(i=n1;i<=n2;i++){
            if(isprime(i))
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
def isprime(n):
    f=0
    for i in range(1,n+1):
        if n%i==0:
            f=f+1
    return f==2

n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if isprime(i):
        print(i,end=' ')






P126: LUCKY CUSTOMER
~~~~~~~~~~~~~~~~~~~~
An e-commerce website wishes to find the lucky customer who will be eligible for full value cash back. For this purpose,a number N is fed to the system. It will return another number that is calculated by an algorithm. In the algorithm, a sequence is generated, in which each number n the sum of the preceding number. initially the sequence will have two 1's in it. The System will return the Nth number from the generated sequence which is treated as the order ID. The lucky customer will be one who has placed that order. Write an alorithm to help the website find the lucky customer.

input --------> an integer value
output -------> a new number


Ex:
	x 1 1 2 3 5 8 13 21 34
	0 1 2 3 4 5 6 7  8  9

Logic:
------
		int fib(int n)
		{
			if(n==0||n==1)
				return n;
			else
				return fib(n-1)+fib(n-2);
		}

n=4 ----> fib(4)=fib(3)+fib(2)
                =fib(2)+fib(1)+fib(1)+fib(0)
                =fib(1)+fib(0)+fib(1)+fib(1)+fib(0)
                =1+0+1+1+0=3

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int fib(int n)
{
    if(n==0||n==1)
        return n;
    else
        return fib(n-1)+fib(n-2);
}
int main() {
    int n;
    scanf("%d",&n);
    printf("%d",fib(n));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int fib(int n)
    {
        if(n==0||n==1)
            return n;
        else
            return fib(n-1)+fib(n-2);
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(fib(n));
    }
}

python implementation:
----------------------
def fib(n):
    if n==0 or n==1:
        return n
    else:
        return fib(n-1)+fib(n-2)

n=int(input())
print(fib(n))






P127: CLIMBING STAIR
~~~~~~~~~~~~~~~~~~~~
You are climbing a stair case. It takes n steps to reach to the top.Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.

input --------> a number from the user
output -------> number of ways

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int fib(int n)
{
    if(n==2||n==1)
        return n;
    else
        return fib(n-1)+fib(n-2);
}
int main() {
    int n;
    scanf("%d",&n);
    printf("%d",fib(n));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int fib(int n)
    {
        if(n==2||n==1)
            return n;
        else
            return fib(n-1)+fib(n-2);
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(fib(n));
    }
}

python implementation:
----------------------
def fib(n):
    if n==2 or n==1:
        return n
    else:
        return fib(n-1)+fib(n-2)

n=int(input())
print(fib(n))






P128: PIN
~~~~~~~~~
"Secure Assets Private Ltd", a small company that deals with lockers has recently started manufacturing digital locks which can be locked and unlocked using PINs (passwords). You have been asked to work on the module that is expected to generate PINs using three input numbers. The three given input numbers will always consist of three digits each  i.e. each of them will be in the range >=100 and <=999.

Bellow are the rules for generating the PIN.

1. The PIN should made up of 4 digits.
2. The unit (ones) position of the PIN should be the least of the units position of the three numbers.
3. The tens position of the PIN should be the least of the tens position of the three input numbers.
4. The hundreds position of the PIN should be least of the hundreds position of the three numbers.
5. The thousands position of the PIN should be the max of all digits in the three input numbers.

input ----------> three numbers
output ---------> PIN value

C Implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int min(int a,int b,int c){
    return (a<b && a<c)?a:(b<c?b:c);
}

int max(int a,int b,int c){
    return (a>b && a>c)?a:(b>c?b:c);
}

int maxD(int n){
    int d,m=0;
    while(n!=0)
    {
        d=n%10;
        if(m<d)
            m=d;
        n=n/10;
    }
    return m;
}
int main() {
    int n1,n2,n3,d1,d2,d3,d4;
    scanf("%d %d %d",&n1,&n2,&n3);
    d1=min(n1%10,n2%10,n3%10);
    d2=min((n1/10)%10,(n2/10)%10,(n3/10)%10);
    d3=min((n1/100)%10,(n2/100)%10,(n3/100)%10);
    d4=max(maxD(n1),maxD(n2),maxD(n3));
    printf("%d",d4*1000+d3*100+d2*10+d1*1);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int maxD(int n){
        int m=0,d;
        while(n!=0)
        {
            d=n%10;
            if(m<d)
                m=d;
            n=n/10;
        }
        return m;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),n3=obj.nextInt(),d1,d2,d3,d4;
        d1=Math.min(Math.min(n1%10,n2%10),n3%10);
        d2=Math.min(Math.min((n1/10)%10,(n2/10)%10),(n3/10)%10);
        d3=Math.min(Math.min((n1/100)%10,(n2/100)%10),(n3/100)%10);
        d4=Math.max(Math.max(maxD(n1),maxD(n2)),maxD(n3));
        System.out.println(d4*1000+d3*100+d2*10+d1*1);
    }
}

python implementation:
----------------------
def maxD(n):
    m=0
    while n!=0:
        d=n%10
        if m<d:
            m=d
        n=n//10
    return m

n1=int(input())
n2=int(input())
n3=int(input())
d1=min(n1%10,n2%10,n3%10)
d2=min((n1//10)%10,(n2//10)%10,(n3//10)%10)
d3=min((n1//100)%10,(n2//100)%10,(n3//100)%10)
d4=max(maxD(n1),maxD(n2),maxD(n3))
print(d4*1000+d3*100+d2*10+d1)






P129: PRIME NUMBER APPLICATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Jackson, a math student, is developing an application on prime numbers. For the given two integers on the display of the application, the user has to identify all the prime numbers within the given range (including the given values). Afterwards the application will sum all those prime numbers. Jackson has to write an algorithm to find the sum of all the prime numbers of the given range.
Write an algorithm to find the sum of all the prime numbers of the given range.

input --------> two space seperated integers
output -------> sum of all prime numbers between given numbers

Ex:
	n1=10 and n2=20 ---> 11, 13, 17, 19 ---> 11+13+17+19=60

Logic:
		sum=0;
		for(i=n1;i<=n2;i++)
		{
			if(isprime(i)){
				sum=sum+i;
			}
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int isprime(int n)
{
    int f=0,i;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    return f==2;
}
int main() {
    int n1,n2,i,sum;
    scanf("%d %d",&n1,&n2);
    sum=0;
    for(i=n1;i<=n2;i++)
    {
        if(isprime(i))
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static boolean isprime(int n)
    {
        int f=0,i;
        for(i=1;i<=n;i++){
            if(n%i==0)
                f++;
        }
        return f==2;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i,sum=0;
        for(i=n1;i<=n2;i++)
        {
            if(isprime(i))
            {
                sum=sum+i;
            }
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
def isprime(n):
    f=0
    for i in range(1,n+1):
        if n%i==0:
            f=f+1
    return f==2

n1=int(input())
n2=int(input())
sum=0
for i in range(n1,n2+1):
    if isprime(i):
        sum=sum+i
print(sum)






P130: PERFECT NUMBER
~~~~~~~~~~~~~~~~~~~~
Create a function that tests whether or not an integer is a perfect number. A perfect number is a number that can be written as sum of its factors. (equal to sum of its proper divisors) excluding the number itself.

input ------> a number from the user
output -----> true or false

Ex:
	4 ----> 1, 2 ----> 1+2=3 false
	6 ----> 1,2,3 ---> 1+2+3=6 true

Logic:
		sum=0;
		for(i=1;i<n;i++)
		{
			if(n%i==0)
				sum=sum+i;
		}
		if n==sum then 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,sum;
    scanf("%d",&n);
    sum=0;
    for(i=1;i<n;i++)
    {
        if(n%i==0)
            sum=sum+i;
    }
    printf((n==sum)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum=0;
        for(i=1;i<n;i++)
        {
            if(n%i==0)
                sum=sum+i;
        }
        System.out.println(sum==n);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(1,n):
    if n%i==0:
        sum=sum+i
print('true' if n==sum else 'false')

P131: SUM OF DIGITS
~~~~~~~~~~~~~~~~~~~~
Create a function that sums the total number of digits between two numbers inclusive. 
for example, if the numbers are 19 and 22, then (1+9)+(2+0)+(2+1)+(2+2)=19.

input ----------> a number from the user
output ---------> sum of digits

Ex:
	n1=19,n2=22 
	19,20,21,22 ---> 1+9+2+0+2+1+2+2=19

Logic:
		sum=0;
		for(i=n1;i<=n2;i++)
		{	
			sum=sum+sumofd(i);
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int sumofd(int n)
{
    int s=0,d;
    while(n!=0)
    {
        d=n%10;
        s=s+d;
        n=n/10;
    }
    return s;
}

int main() {
    int n1,n2,s=0,i;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        s=s+sumofd(i);
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int sumofd(int n)
    {
        int s=0,d;
        while(n!=0)
        {
            d=n%10;
            s=s+d;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i,s=0;
        for(i=n1;i<=n2;i++)
        {
            s=s+sumofd(i);
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
def sumofd(n):
    s=0
    while n!=0:
        d=n%10
        s=s+d
        n=n//10
    return s

n1=int(input())
n2=int(input())
s=0
for i in range(n1,n2+1):
    s=s+sumofd(i)
print(s)







P132: PARITY BITS
~~~~~~~~~~~~~~~~~
Michael wants to check the parity of the given number. To find tha parity, follow below steps.

1. convert decimal number into binary number.
2. count the number of 1's and 0's in the binary representation.

if it contains odd number of 1-bits, then it is "odd parity" and if contains even number of 1-bits then "even parity" 
Write a program to validate the given number belongs to odd parity or even parity.

input -------> a number from the user.
output ------> odd parity or even parity.

Ex:
	n=5-->0101--->2 even
	n=6-->0110--->2 even
	n=7-->0111 -->3 odd

Logic:
		c=0;
		while(n!=0)
		{
			if(n%2==1)
				c++;
			n=n/2;			
		}
		if c%2==0 then even else odd

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,c=0;
    scanf("%d",&n);
    while(n!=0)
    {
        if(n%2==1)
            c++;
        n=n/2;
    }
    printf((c%2==0)?"even":"odd");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),c=0;
        while(n!=0)
        {
            if(n%2==1)
                c++;
            n=n/2;
        }
        System.out.println((c%2==0?"even":"odd"));
    }
}

python implementation:
----------------------
n=int(input())
s=bin(n)
print("even" if s.count('1')%2==0 else 'odd')







P133: FUN GAMES
~~~~~~~~~~~~~~~
The games development company "FunGames" has developed a ballon shooter games. The ballons are arranged in a linear sequence and each ballon has a number associated with it. The numbers on the ballons are fibonacci series. In the game the player shoots 'k' ballons. The player's score is the sum of numbers on k ballons.

Write an algorithm to generate the player's score.

input ----> an integer vlaue n
output ---> sum value

Ex:
	n=5 ----> 0+1+1+2+3=7

Logic:
		a=-1;
		b=+1;
		for(i=1;i<=n;i++)
		{
			c=a+b;
			s=s+c;
			a=b;
			b=a;
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c,s=0,n,i;
    scanf("%d",&n);
    a=-1;
    b=1;
    for(i=1;i<=n;i++)
    {
        c=a+b;
        s=s+c;
        a=b;
        b=c;
    }
    printf("%d",s);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s=0,a,b,c;
        a=-1;
        b=1;
        for(i=1;i<=n;i++)
        {
            c=a+b;
            s=s+c;
            a=b;
            b=c;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
n=int(input())
a=-1
b=1
s=0
for i in range(1,n+1):
    c=a+b
    s=s+c
    a=b
    b=c
print(s)






P134: FACTORIAL GAME
~~~~~~~~~~~~~~~~~~~~
Mikes likes to play with numbers. His friends are also good with numbers and often plays mathematical games. they made a small game where they will spell the last digit of a factorial of a number other than 0.

Let say the given number is 5, so 5! will be 120, Here 0 is the last digit. But we dn't want 0, we want a number other than 0. Then last digit is 2.

input ----> an integer value
output ---> an integer vlaue

Ex:
	4--->24--->4
	5--->120-->2

Logic:
		f=1;
		for(i=1;i<=n;i++)
			f=f*i;
		if(f%10!=0)
			print f%10
		if(f%10==0)
			print (f/10)%10

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,f=1;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
        f=f*i;
    if(f%10!=0)
        printf("%d",f%10);
    else
        printf("%d",(f/10)%10);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),f=1,i;
        for(i=1;i<=n;i++)
            f=f*i;
        if(f%10!=0)
            System.out.println(f%10);
        else
            System.out.println((f/10)%10);
    }
}

python implementation:
----------------------
import math
n=int(input())
f=math.factorial(n)

if f%10!=0:
    print(f%10)
else:
    print((f//10)%10)







P135: PARITY QUIZ
~~~~~~~~~~~~~~~~~
While sitting in party, Tom came up with an idea of a quiz. and the quiz is, Tom will spell out a number, and a person has to tell a number which is next to it. But this number has to be perfect square.

input -----> a number from the user
output ----> the perfect square after N

Ex:
	n=5 ----> 6,7,8,9 ---> 9
	n=2 ----> 3,4 -------> 4

Logic:
		for(i=1;;i++)
		{
			if(i*i>=n)
			{
				print i
				break;
			}
		}

n=5 ---> 1,4,9 ---> 9
n=2 ---> 1,4 -----> 4

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i;
    scanf("%d",&n);
    for(i=1;;i++)
    {
        if(i*i>=n)
        {
            printf("%d",i*i);
            break;
        }
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        for(i=1;;i++)
        {
            if(i*i>=n)
            {
                System.out.println(i*i);
                break;
            }
        }
    }
}

python implementation:
-----------------------
n=int(input())
i=1
while True:
    if i*i>=n:
        print(i*i)
        break
    i=i+1







P136: PRIME NUMBER BUSSES
~~~~~~~~~~~~~~~~~~~~~~~~~
James wants to travel by bus to reach his friend John's home. John gave a hint that all busses from Jame's location will reach his home if the bus number is prime number.
Write a program to help James find the bus that reaches John's home.

input -----> a number from the user
output ----> yes or no

Ex:
	4 ----> no
	5 ----> yes

Logic:
------
		f=0;
		for(i=1;i<=n;i++)
		{
			if(n%i==0)
				f++;
		}
		if f==2 then 'yes' else 'no'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,f;
    scanf("%d",&n);
    f=0;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    printf((f==2)?"yes":"no");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),f=0,i;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        System.out.println((f==2)?"yes":"no");
    }
}

python implementation:
----------------------
n=int(input())
f=0
for i in range(1,n+1):
    if n%i==0:
        f=f+1
print('yes' if f==2 else 'no')







P137: SUM OF ALL INTEGERS
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of all integers between two integer numbers taken as input and are divisible by 7.


input ------> an integer value
output -----> sum value

Ex:
---
	n1=1,n2=20 ---> 7+14=21

Logic:
------
		sum=0;
		for(i=n1;i<=n2;i++)
		{
			if(i%7==0)
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n1,n2,i,sum=0;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(i%7==0)
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i,sum=0;
        for(i=n1;i<=n2;i++)
        {
            if(i%7==0)
                sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
sum=0
for i in range(n1,n2+1):
    if i%7==0:
        sum=sum+i
print(sum)






P138: COMPOSITE NUMBER
~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is composite number or not.

input ----> a number from the user
output ---> true or false


Ex:
	4 ----> true
	5 ----> false

Logic:
------
		f=0;
		for(i=1;i<=n;i++)
		{
			if(n%i==0)
				f++;
		}
		if f>2 then 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,f;
    scanf("%d",&n);
    f=0;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    printf((f>2)?"true":"false");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),f=0,i;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        System.out.println(f>2);
    }
}

python implementation:
----------------------
n=int(input())
f=0
for i in range(1,n+1):
    if n%i==0:
        f=f+1
print('true' if f>2 else 'false')






P139: DIVISIBLE BY 5 OR 7
~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the list of integers which are divisible by 5 or 7.

input ----> a number from the user
output ---> seq of int values which are divisible by 5 or 7

Ex:
---
	n=10 ----> 5, 7, 10
	n=20 ----> 5, 7, 10, 14, 15, 20

Logic:
------
		for(i=1;i<=n;i++)
		{
			if(i%5==0 or i%7==0)
				print i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        if(i%7==0 || i%5==0)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        for(i=1;i<=n;i++)
        {
            if(i%5==0 || i%7==0)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1):
    if i%7==0 or i%5==0:
        print(i,end=' ')






P140: ENDING 3 
~~~~~~~~~~~~~~
Implement a program to print the list of integers which are ending with 3 in the given range.

input -----> n1 and n2 values
output ----> list of int values

Ex:
	1,20 ---> 3, 13

Logic:
		for(i=n1;i<=n2;i++)
		{
			if(i%10==3)
				print i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n1,n2,i;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(i%10==3)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i;
        for(i=n1;i<=n2;i++)
        {
            if(i%10==3)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if i%10==3:
        print(i,end=' ')





P141: MIN AND MAX
~~~~~~~~~~~~~~~~~
Implement a program to find absolute diff between sum of max digits and sum of min digits present in three integers n1,n2 and n3

input -----> n1,n2 and n3
output ----> int value

P142: SUM OF ALL PRIME NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of all prime numbers from 2 to n.

input -----> an integer value
output ----> sum of prime numbers






P143: SUM OF ALL ARMSTRONG NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of all armstrong numbers from 0 to n.

input -----> an integer value
output ----> sum of armstrong numbers





P144: SUM OF ALL STRONG NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of all strong numbers from 0 to n.

input -----> an integer value
output ----> sum of strong numbers

P145: SUM OF ALL PERFECT NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of all perfect numbers from 0 to n.

input -----> an integer value
output ----> sum of perfect numbers

P146: MULTIPLICATION TABLE
~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print multiplication table of the given integer n

input -----> an integer value
output ----> multiplication table

P147: ENDING WITH DIGIT 3
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find all the numbers from n1 to n2, which are ending with the digit 3.

input ----> an integer value
output ---> list of integers

P148: LAST BEFORE DIGIT IS 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find all the numbers from n1 to n2, where the numbers last before digit is 3.

input ----> an integer value
output ---> list of integers

P149: BEGINGIN AND ENDING WITH 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find all the numbers from n1 to n2, which are begining and ending with the digit 3.

input ----> an integer value
output ---> list of integers

P150: SUM OF FIRST AND LAST DIGIT IS 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find all the numbers from n1 to n2, where sum of first and last digit should be equal to 3.

input ----> an integer value
output ---> list of integers